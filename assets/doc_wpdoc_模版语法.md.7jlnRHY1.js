import{_ as s,o as i,c as a,R as n}from"./chunks/framework.S1SDgkSw.js";const g=JSON.parse('{"title":"FlyQL模板语法","description":"","frontmatter":{"title":"FlyQL模板语法"},"headers":[],"relativePath":"doc/wpdoc/模版语法.md","filePath":"doc/wpdoc/模版语法.md"}'),e={name:"doc/wpdoc/模版语法.md"},p=n(`<h1 id="_3-1-2-2-flyql模板语法" tabindex="-1">3.1.2.2. FlyQL模板语法 <a class="header-anchor" href="#_3-1-2-2-flyql模板语法" aria-label="Permalink to &quot;3.1.2.2. FlyQL模板语法&quot;">​</a></h1><p>在sql查询语句中可以穿插动态模板 <strong>{js语句}</strong>，运行时根据模板条件组装语句，实现<strong>动态SQL</strong>。</p><p><strong>API</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 动态参数引用: { }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 动态条件语句: {#if } {#endif}Copy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><p><strong>例1</strong>: 查询门店信息，查询条件门店名称来自输入参数</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设输入参数 kx_store.storename 为前端输入的门店名称</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// IN 为输入对象的集合，可参考 业务对象/输入/输出 章节</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> storeid, storename FROM kx_store</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> storename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {IN.kx_store.storename};Copy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>例2</strong>: 查询当前登录人所负责的门店</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// SESSION.mbcode 为当前登录人成员编号</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 门店列表查询过滤出当前责任人等于当前登录人的记录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> storeid, storename FROM kx_store</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> princial </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {SESSION.mbcode};Copy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>例3</strong>: 根据入参是否存在动态拼接语句</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 若IN.kx_store.storename不为空，则加入条件语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> storeid, storename FROM kx_store</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.kx_store.storename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> storename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {IN.kx_store.storename}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{#endif}Copy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr>`,12),l=[p];function t(h,r,k,d,o,c){return i(),a("div",null,l)}const m=s(e,[["render",t]]);export{g as __pageData,m as default};
