import{_ as e,o as a,c as o,Q as t}from"./chunks/framework.d084db19.js";const u=JSON.parse('{"title":"Over View 简介","description":"","frontmatter":{"title":"Over View 简介","date":"2020-05-19T16:37:21.000Z"},"headers":[],"relativePath":"doc/wpdoc/Over View 简介.md","filePath":"doc/wpdoc/Over View 简介.md"}'),r={name:"doc/wpdoc/Over View 简介.md"},i=t('<h1 id="page-over-view" tabindex="-1">Page Over View <a class="header-anchor" href="#page-over-view" aria-label="Permalink to &quot;Page Over View&quot;">​</a></h1><p>表单是承载业务逻辑和UI的主体，是实现业务功能的基本单位。</p><p>一个完整的业务，通常由多个表单组合在一起，相互协作而成，例如 <strong>订单查询功能</strong> 就可能由<code>订单列表</code> ， <code>订单详情</code> ，<code>订单编辑</code> 等表单构成。</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/Over-View-%E7%AE%80%E4%BB%8B.png" alt=""></p><p>为了更方便的实现一些特定场景下的业务功能，一部分表单会具有一些特定的功能，因此表单可以据此分了两类：</p><ol><li><p><a href="./NormalPage.html">Normal Page 通用表单</a></p><p>通用表单是指是用基本通用的控件和行为组装而成，能够大部分的业务场景。</p></li><li><p><a href="./FeaturePage.html">Feature Page 功能表单</a></p><p>有些特殊且高频使用的，较为复杂的业务场景，为了提高用户的使用体验，简化配置的难度，而设计出的有特殊特性，满足某一类应用场景的表单。例如<code>表单流</code>，<code>审批流</code>等</p></li></ol><h2 id="configuration-page-配置表单" tabindex="-1">Configuration Page 配置表单 <a class="header-anchor" href="#configuration-page-配置表单" aria-label="Permalink to &quot;Configuration Page 配置表单&quot;">​</a></h2><p>为了方便表单的升级，合并，针对表单的控件部分进行了处理，这个协议是服务器存储的形式，前端在获取表单时，会将配置表单转换为通用表单后再下发。</p><p>更多配置表单的说明请参看<a href="./ConfigurationPage.html">配置表单说明</a></p>',9),c=[i];function p(n,d,l,_,s,h){return a(),o("div",null,c)}const f=e(r,[["render",p]]);export{u as __pageData,f as default};
