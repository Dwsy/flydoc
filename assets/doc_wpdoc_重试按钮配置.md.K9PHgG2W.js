import{_ as s,o as a,c as i,R as n}from"./chunks/framework.S1SDgkSw.js";const _=JSON.parse('{"title":"重试按钮配置","description":"","frontmatter":{"title":"重试按钮配置","date":"2022-08-17T08:19:51.000Z"},"headers":[],"relativePath":"doc/wpdoc/重试按钮配置.md","filePath":"doc/wpdoc/重试按钮配置.md"}'),e={name:"doc/wpdoc/重试按钮配置.md"},p=n(`<p>重试按钮在App Rc4及以后的版本中被支持，需要通过IDE配置，并出现网络异常时会被触发</p><h3 id="ide配置" tabindex="-1">IDE配置 <a class="header-anchor" href="#ide配置" aria-label="Permalink to &quot;IDE配置&quot;">​</a></h3><p>在事件配置中，勾选“启用重试”，并在行为配置中，配置有“数据提交”、“拜访流数据提交”、“数据请求”，当出现网络相关异常时，在弹出的提示框中，即出现重试按钮</p><p>当用户点击重试按钮时，对应的事件会被重新执行，需要注意的是，实施人员需要做好相关数据的幂等处理</p><h3 id="特别地" tabindex="-1">特别地 <a class="header-anchor" href="#特别地" aria-label="Permalink to &quot;特别地&quot;">​</a></h3><p>因为uiflycode中能触发网络请求，故，出现网络异常时，相应的异常码会被回传到uiflycode中，实施人员需要调用内置的方法，把异常抛出</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//错误回调</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> failHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //关闭进度条，必须在 throwIfNetError 前调用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closeProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //如果错误码匹配，这里会抛出异常，中断后继逻辑</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    throwIfNetError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(error, message)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //其他后继逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,7),l=[p];function t(r,h,k,c,d,o){return a(),i("div",null,l)}const b=s(e,[["render",t]]);export{_ as __pageData,b as default};
