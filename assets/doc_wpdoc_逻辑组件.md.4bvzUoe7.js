import{_ as a,o as t,c as l,R as i}from"./chunks/framework.E9w9IFh5.js";const u=JSON.parse('{"title":"逻辑组件","description":"","frontmatter":{"title":"逻辑组件","date":"2023-07-19T10:20:35.000Z"},"headers":[],"relativePath":"doc/wpdoc/逻辑组件.md","filePath":"doc/wpdoc/逻辑组件.md"}'),o={name:"doc/wpdoc/逻辑组件.md"},p=i('<h1 id="逻辑组件" tabindex="-1">逻辑组件 <a class="header-anchor" href="#逻辑组件" aria-label="Permalink to &quot;逻辑组件&quot;">​</a></h1><p>通过逻辑组件进行逻辑编排和组合，主要有输出结果、失败、成功、迭代器、条件分支和定时任务6种逻辑组件。</p><h2 id="_1-输出结果" tabindex="-1">1. 输出结果 <a class="header-anchor" href="#_1-输出结果" aria-label="Permalink to &quot;1\\. 输出结果&quot;">​</a></h2><p>输出结果组件，可以选择所在集成流，该输出结果组件节点之前，其它节点的输出内容，添加字段可增加多个节点的输出内容，单条字段只能选择一个节点的任一输出参数。</p><ol><li><p>选择字段类型，默认“字段值”。</p></li><li><p>选择“字段值”类型时，如果选择变量字段时，输出字段的key为空，则自定使用选择变量字段的字段名作为key值自动填充填充。</p></li><li><p>选择“展开Map值”类型时，key将不可以输入，而value只能选择一个map类型的值。<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/1k.png" alt=""></p></li></ol><h3 id="_1-1-用例说明" tabindex="-1">1.1 用例说明 <a class="header-anchor" href="#_1-1-用例说明" aria-label="Permalink to &quot;1.1 用例说明&quot;">​</a></h3><p>下面将通过快速入门配置的高德地理编码接口的集成流，来展示选择“字段值”和“展开Map值”输出结果的不同。<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/2k.png" alt=""></p><h2 id="_2-失败" tabindex="-1">2. 失败 <a class="header-anchor" href="#_2-失败" aria-label="Permalink to &quot;2\\. 失败&quot;">​</a></h2><p>执行到该行为节点时，将会立即终止当前流程，并标记执行状态为失败，并且能将错误编码和错误消息通知到调用方。</p><ol><li><p>填写“错误编码”和“错误信息”。</p></li><li><p>失败标记只能添加在一个分支的最后，并且其后面不支持添加新的节点。当不支持添加时，需要在适配器列表中屏蔽该适配器。</p></li><li><p>删除节点后，其后重新恢复可以插入新节点<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/3k.png" alt=""></p></li></ol><h2 id="_3-成功" tabindex="-1">3. 成功 <a class="header-anchor" href="#_3-成功" aria-label="Permalink to &quot;3\\. 成功&quot;">​</a></h2><p>执行到该行为节点时，将会立即终止当前流程，并标记执行状态为成功。</p><ol><li><p>成功标记只能添加在一个分支的最后，并且其后面不支持添加新的节点。</p></li><li><p>删除节点后，其后重新恢复可以插入新节点<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/4k.png" alt=""></p></li></ol><h2 id="_4-迭代器" tabindex="-1">4. 迭代器 <a class="header-anchor" href="#_4-迭代器" aria-label="Permalink to &quot;4\\. 迭代器&quot;">​</a></h2><p>循环迭代<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/5k.png" alt=""></p><h2 id="_5-条件分支" tabindex="-1">5. 条件分支 <a class="header-anchor" href="#_5-条件分支" aria-label="Permalink to &quot;5\\. 条件分支&quot;">​</a></h2><ol><li><p>初始状态：添加一个条件分支节点时，默认生成两个条件分支：默认分支，条件1并且条件1的条件中默认生成一个空条件。</p></li><li><p>添加条件：支持添加新条件，每次添加的新条件都会自动生成一个空条件，最多支持添加10个条件分支。</p></li><li><p>删除条件：支持对非默认条件进行删除，如果除了默认分支外，只有最后一个条件时，也不支持删除（因为不能只有一个分支）</p></li><li><p>条件设置：设置方式与数据库-查询的条件设置保持一致。主要的区别是左值的选择是来源于上下文参数<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/6k.png" alt=""></p></li></ol><h2 id="_6-定时任务" tabindex="-1">6. 定时任务 <a class="header-anchor" href="#_6-定时任务" aria-label="Permalink to &quot;6\\. 定时任务&quot;">​</a></h2><p>定时任务触发器用于周期性触发一个集成流，只能在触发节点选择。<br> 在逻辑组件选项下，选择点击“定时任务”，进入定时任务的配置界面。<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/7k.png" alt=""></p><ol><li>设置方式：设置方式有三种，分别为”周期性触发“、”Cron表达式“和”指定时间触发“</li><li>执行期限：开始执行期限，规定了从何时开始执行的期限，为空时表示立即开始；结束执行期限，规定了何时自动结束执行的期限，为空时表示永远不结束。当设置方式选择”周期性触发“或者”Cron表达式“就会出现该字段。</li><li>执行周期：在执行期限内，规定了执行的时间，比如”每月“、”按月“、”每日“、”按日“、”按周“、”按时间间隔“、”按指定时间“。</li><li>表达式：Cron表达式是一个具有时间含义的字符串，字符串以5至6个空格隔开，分为6至7个域，格式为X X X X X X X。当设置方式选择”Cron表达式“就会出现该字段。</li><li>点击【最近10次执行时间】，就会显示出最近10次执行时间。当设置方式选择”周期性触发“或者”Cron表达式“就会出现该字段。</li><li>点击【添加时间】，指定某一时间。当设置方式选择”指定时间触发“就会出现该字段。<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/8k.png" alt=""></li><li>总执行超时时间：异常情况时，填写执行超时时间，不填写代表不超时。</li><li>自动跳过执行：如果执行的任务不能并发执行，同一时间只能有一个执行实例的，可以勾选该选项来避免冲突。勾选后，执行集成流之前会检测上一次执行是否完成，如果没有完成，则会取消当前的执行，等待下一个执行周期。<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/9k.png" alt=""></li></ol>',20),e=[p];function n(r,c,h,s,d,_){return t(),l("div",null,e)}const b=a(o,[["render",n]]);export{u as __pageData,b as default};
