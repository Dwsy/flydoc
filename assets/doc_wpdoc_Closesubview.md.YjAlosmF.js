import{_ as s,c as e,o as t,U as a}from"./chunks/framework.FhXPyWfz.js";const b=JSON.parse('{"title":"Closesubview","description":"","frontmatter":{"title":"Closesubview","date":"2020-05-22T15:58:05.000Z"},"headers":[],"relativePath":"doc/wpdoc/Closesubview.md","filePath":"doc/wpdoc/Closesubview.md"}'),i={name:"doc/wpdoc/Closesubview.md"},n=a(`<h1 id="closesubview-关闭子视图" tabindex="-1">Closesubview 关闭子视图 <a class="header-anchor" href="#closesubview-关闭子视图" aria-label="Permalink to &quot;Closesubview 关闭子视图&quot;">​</a></h1><p>用于关闭当前最顶层的子视图，如果当前没有子视图，则该行为不产生任何效果。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;closesubview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;condition&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="getter-setter" tabindex="-1">getter &amp; setter <a class="header-anchor" href="#getter-setter" aria-label="Permalink to &quot;getter &amp; setter&quot;">​</a></h2><p>支持使用getter取值，所取得的值可以用于setter进行赋值</p><blockquote><p>相当于datarequest事件中的getter和setter，不同之处在于此处getter获取到的值直接用于setter赋值，而不是作为入参调用接口来获取setter需要的值。</p></blockquote>`,6),l=[n];function o(r,p,c,h,d,u){return t(),e("div",null,l)}const _=s(i,[["render",o]]);export{b as __pageData,_ as default};
