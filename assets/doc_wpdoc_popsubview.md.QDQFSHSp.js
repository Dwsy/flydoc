import{_ as s,o as i,c as a,R as e}from"./chunks/framework.E9w9IFh5.js";const E=JSON.parse('{"title":"popsubview","description":"","frontmatter":{"title":"popsubview","date":"2020-05-22T15:57:38.000Z"},"headers":[],"relativePath":"doc/wpdoc/popsubview.md","filePath":"doc/wpdoc/popsubview.md"}'),t={name:"doc/wpdoc/popsubview.md"},n=e(`<h1 id="popsubview-弹窗事件" tabindex="-1">popsubview 弹窗事件 <a class="header-anchor" href="#popsubview-弹窗事件" aria-label="Permalink to &quot;popsubview 弹窗事件&quot;">​</a></h1><p>内部弹窗专门用于弹出<a href="./../../Page/View.html">View 视图层</a>层中subviews的某个子view，可以指定弹出区域的大小。</p><p>目前统一弹窗都是在当前page的正中弹出。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;popsubview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;condition&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;viewcode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;viewwidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;60%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;viewheight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;200&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;getter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;setter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="viewcode-视图code" tabindex="-1">viewcode 视图code <a class="header-anchor" href="#viewcode-视图code" aria-label="Permalink to &quot;viewcode 视图code&quot;">​</a></h3><p>用于指定要弹出的子视图</p><h3 id="viewwidth-弹窗宽度" tabindex="-1">viewwidth 弹窗宽度 <a class="header-anchor" href="#viewwidth-弹窗宽度" aria-label="Permalink to &quot;viewwidth 弹窗宽度&quot;">​</a></h3><p>宽度的默认值，在手机端为80%，在web端为50%。</p><h3 id="viewheight-弹窗高度" tabindex="-1">viewheight 弹窗高度 <a class="header-anchor" href="#viewheight-弹窗高度" aria-label="Permalink to &quot;viewheight 弹窗高度&quot;">​</a></h3><p>高度的默认值为为空，即根据内容高度决定，不过最大高度不能超过page高度的80%。</p><p>通过分别指定 <code>width</code> 和 <code>height</code> 来设置子view的容器的大小，这两个维度接受以下取值：</p><ul><li><p>0</p><p>代表在该维度的尺寸需要根据内容大小自适应。</p></li><li><p>正整数</p><p>取值范围为 <code>(0, +∞]</code> ，代表该维度的具体的dp值。</p></li><li><p>百分比</p><p>取值范围为 <code>[0%, 100%]</code> ，代表该维度在所占可显示区域的百分比。</p><p>IDE可以提供以下几种默认取值</p></li></ul><table><thead><tr><th>显示文本</th><th>实际值</th></tr></thead><tbody><tr><td>大</td><td>80%</td></tr><tr><td>中</td><td>50%</td></tr><tr><td>小</td><td>30%</td></tr></tbody></table>`,13),p=[n];function h(l,d,o,r,k,c){return i(),a("div",null,p)}const b=s(t,[["render",h]]);export{E as __pageData,b as default};
