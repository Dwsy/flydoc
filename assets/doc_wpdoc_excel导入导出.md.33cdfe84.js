import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.aac09c5f.js";const b=JSON.parse('{"title":"excel导入导出","description":"","frontmatter":{"title":"excel导入导出","date":"2020-07-03T18:05:06.000Z"},"headers":[],"relativePath":"doc/wpdoc/excel导入导出.md","filePath":"doc/wpdoc/excel导入导出.md"}'),p={name:"doc/wpdoc/excel导入导出.md"},o=l(`<h1 id="_3-3-1-excel导入导出" tabindex="-1">3.3.1. Excel导入导出 <a class="header-anchor" href="#_3-3-1-excel导入导出" aria-label="Permalink to &quot;3.3.1. Excel导入导出&quot;">​</a></h1><ul><li><p><a href="#331-excel导入导出">3.3.1. Excel导入导出</a></p><ul><li><p><a href="#3311-excel导入">3.3.1.1. EXCEL导入</a></p><ul><li><p><a href="#33111-导入配置">3.3.1.1.1. 导入配置</a></p><ul><li><a href="#331111-实施专用配置类似java项目的properties文件">3.3.1.1.1.1. 实施专用配置（<strong>类似java项目的properties文件</strong>）</a></li><li><a href="#331112-web端用户专用配置类似java项目的properties文件">3.3.1.1.1.2. web端用户专用配置（<strong>类似java项目的properties文件</strong>）</a></li><li><a href="#331113-实施web端共用配置类似存储过程的入参">3.3.1.1.1.3. 实施、web端共用配置（<strong>类似存储过程的入参</strong>）</a></li><li><a href="#331114-导入缓存配置">3.3.1.1.1.4. 导入缓存配置</a></li></ul></li><li><p><a href="#33112-数据绑定对象类似mybatis的resultmap">3.3.1.1.2. 数据绑定对象（<strong>类似mybatis的resultMap</strong>）</a></p><ul><li><a href="#331121-数据校验">3.3.1.1.2.1. 数据校验</a></li></ul></li><li><p><a href="#33113-特殊需求处理">3.3.1.1.3. 特殊需求处理</a></p></li><li><p><a href="#33114-统计忽略导入的行">3.3.1.1.4. 统计忽略导入的行</a></p></li><li><p><a href="#33115-跨表头导入">3.3.1.1.5. 跨表头导入</a></p></li></ul></li><li><p><a href="#3312-excel导出">3.3.1.2. EXCEL导出</a></p><ul><li><p><a href="#33121-导出绑定对象数组类似mybatis的resultmap">3.3.1.2.1. 导出绑定对象数组（<strong>类似mybatis的resultMap</strong>）</a></p><ul><li><a href="#331211-web端用户专用配置类似java项目的properties文件">3.3.1.2.1.1. web端用户专用配置（<strong>类似java项目的properties文件</strong>）</a></li></ul></li><li><p><a href="#33122-抽取数据库数据">3.3.1.2.2. 抽取数据库数据</a></p></li><li><p><a href="#33123-导出操作">3.3.1.2.3. 导出操作</a></p></li><li><p><a href="#33124-导出操作">3.3.1.2.4. 导出操作</a></p></li><li><p><a href="#33125-跨列父表头">3.3.1.2.5. 跨列父表头</a></p></li><li><p><a href="#33126-注意事项">3.3.1.2.6. 注意事项</a></p></li><li><p><a href="#33127-导出格式扩展">3.3.1.2.7. 导出格式扩展</a></p></li></ul></li><li><p><a href="#3313-excel复杂结构导出方案">3.3.1.3. EXCEL复杂结构导出方案</a></p></li></ul></li></ul><h2 id="_3-3-1-1-excel导入" tabindex="-1">3.3.1.1. EXCEL导入 <a class="header-anchor" href="#_3-3-1-1-excel导入" aria-label="Permalink to &quot;3.3.1.1. EXCEL导入&quot;">​</a></h2><p>excel导入数据是按行来导入的，每行数据都会执行一次flycode，前一行导入出错不影响后一行的导入，同一行数据导入出错的时候，会回滚该行的导入。</p><h3 id="_3-3-1-1-1-导入配置" tabindex="-1">3.3.1.1.1. 导入配置 <a class="header-anchor" href="#_3-3-1-1-1-导入配置" aria-label="Permalink to &quot;3.3.1.1.1. 导入配置&quot;">​</a></h3><h4 id="_3-3-1-1-1-1-实施专用配置-类似java项目的properties文件" tabindex="-1">3.3.1.1.1.1. 实施专用配置（<strong>类似java项目的properties文件</strong>） <a class="header-anchor" href="#_3-3-1-1-1-1-实施专用配置-类似java项目的properties文件" aria-label="Permalink to &quot;3.3.1.1.1.1. 实施专用配置（**类似java项目的properties文件**）&quot;">​</a></h4><p>这些配置描述导入excel的数据抽取规则，不会影响flycode的代码执行逻辑。<br> 实施在flycode代码开始处（不需要在ide上配置入参），必须定义“_xlsconf”对象，该对象的属性即为实施专用配置。该对象目前有两个属性：1、startindex，表示从sheet页的第几行开始导入。2、isOrderExtract，表示将按行的顺序导入excel（会影响导入速度）。后续flycode代码中不能使用“_xlsconf”对象。<br><strong>注意：“_xlsconf”对象只能一次性定义，不支持在flycode中添加、删减、修改对象属性</strong>。</p><hr><p><strong>示例</strong>：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _xlsconf </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;">//指定将从sheet页的第N行开始导入。注意：第0行为列名行</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;startindex&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;N&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// true表示顺序导入， false表示不顺序导入（默认）</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;isOrderExtract&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _xlsconf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6A737D;">//指定将从sheet页的第N行开始导入。注意：第0行为列名行</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;startindex&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;N&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// true表示顺序导入， false表示不顺序导入（默认）</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;isOrderExtract&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr><h4 id="_3-3-1-1-1-2-web端用户专用配置-类似java项目的properties文件" tabindex="-1">3.3.1.1.1.2. web端用户专用配置（<strong>类似java项目的properties文件</strong>） <a class="header-anchor" href="#_3-3-1-1-1-2-web端用户专用配置-类似java项目的properties文件" aria-label="Permalink to &quot;3.3.1.1.1.2. web端用户专用配置（**类似java项目的properties文件**）&quot;">​</a></h4><p>这些配置描述导入excel的数据抽取规则，不会影响flycode的代码执行逻辑。<br> 由实施在ide配置入参，web端用户传参。参数名不能以下划线“_”开头（参数名以下划线开头的参数有特殊用途，可见3.8.1.1.3. 实施、web端共用配置）。主要用来描述待导入的一些信息。如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;xls_test&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//指定了导入哪些sheet。传空数组表示导入全部sheet</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;sheetnames&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;[</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">华南sheet</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">,</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">华北sheet</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">]&quot;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//导入的excel在文件系统的路径</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;excelname&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;http://172.16.0.125:7000/file/img/20170522/1008199/input1.xlsx&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;xls_test&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//指定了导入哪些sheet。传空数组表示导入全部sheet</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;sheetnames&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;[</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">华南sheet</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">,</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">华北sheet</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">]&quot;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//导入的excel在文件系统的路径</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;excelname&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;http://172.16.0.125:7000/file/img/20170522/1008199/input1.xlsx&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_3-3-1-1-1-3-实施、web端共用配置-类似存储过程的入参" tabindex="-1">3.3.1.1.1.3. 实施、web端共用配置（<strong>类似存储过程的入参</strong>） <a class="header-anchor" href="#_3-3-1-1-1-3-实施、web端共用配置-类似存储过程的入参" aria-label="Permalink to &quot;3.3.1.1.1.3. 实施、web端共用配置（**类似存储过程的入参**）&quot;">​</a></h4><p>实施在flycode定义“<em>paramobj”全局对象作为共用配置对象，web端用户可以选择覆盖这个对象的属性（只能覆盖属性名以下划线“\\</em>”开头的属性）。“_paramobj”对象可以被flycode代码引用，进而达到控制flycode执行逻辑的目的。使用方法如下：</p><ul><li><p>步骤一：实施在flycode中一次性定义“_paramobj”全局对象作为参数对象，<strong>禁止实施人员在后续flycode中添加、删减、修改对象属性</strong>。该对象可以被后续flycode代码引用。如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _paramobj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">//重复行导入策略： 1：更新；2：追加；3：忽略</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;_dupstrategy&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _paramobj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">//重复行导入策略： 1：更新；2：追加；3：忽略</span></span>
<span class="line"><span style="color:#032F62;">&quot;_dupstrategy&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>步骤二：如果web端用户想覆盖实施的定义，则需要实施在ide上配置入参，由web端用户传参，参数名必须以“_”开头。如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;xls_test&quot;</span><span style="color:#E1E4E8;">:{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//重复行导入策略： 1：更新；2：追加；3：忽略</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;_dupstrategy&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;3&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#032F62;">&quot;xls_test&quot;</span><span style="color:#24292E;">:{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//重复行导入策略： 1：更新；2：追加；3：忽略</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;_dupstrategy&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;3&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>此后，在flycode执行之前，“_paramobj”对象的_dupstrategy属性会被平台替换成web端用户的定义，如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_paramobj._dupstrategy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;3&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_paramobj._dupstrategy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;3&quot;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>步骤三：后续flycode代码中，可以直接使用“_paramobj”对象。比如使用该对象做一些流程控制，如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(_paramobj._dupstrategy </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#6A737D;">//执行更新</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(_paramobj._dupstrategy </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#6A737D;">//执行追加</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(_paramobj._dupstrategy </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#6A737D;">//执行忽略</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">//抛出异常</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(_paramobj._dupstrategy </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#6A737D;">//执行更新</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(_paramobj._dupstrategy </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#6A737D;">//执行追加</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(_paramobj._dupstrategy </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#6A737D;">//执行忽略</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//抛出异常</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h4 id="_3-3-1-1-1-4-导入缓存配置" tabindex="-1">3.3.1.1.1.4. 导入缓存配置 <a class="header-anchor" href="#_3-3-1-1-1-4-导入缓存配置" aria-label="Permalink to &quot;3.3.1.1.1.4. 导入缓存配置&quot;">​</a></h4><p>为了避免导入逻辑频繁访问数据库，从而造成导入执行效率低的问题，专门为导入逻辑引入缓存配置；该缓存只对一次导入执行有效，即是局部缓存。该配置适用于小结果集的缓存，比如字典数据。</p><ul><li>缓存配置<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _cache_brandList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> select d.dictionaryid,d.dicvalue,d.keypath,d.status </span></span>
<span class="line"><span style="color:#E1E4E8;">                    from kx_productbrand d </span><span style="color:#B392F0;">RULE</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;pl_salearea&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _cache_storelevels </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> select d.dictionaryid,d.dicvalue,d.status </span></span>
<span class="line"><span style="color:#E1E4E8;">                    from kx_storelevel d </span><span style="color:#79B8FF;">NORULE</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _cache_brandList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> select d.dictionaryid,d.dicvalue,d.keypath,d.status </span></span>
<span class="line"><span style="color:#24292E;">                    from kx_productbrand d </span><span style="color:#6F42C1;">RULE</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;pl_salearea&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _cache_storelevels </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> select d.dictionaryid,d.dicvalue,d.status </span></span>
<span class="line"><span style="color:#24292E;">                    from kx_storelevel d </span><span style="color:#005CC5;">NORULE</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><p><em><strong>注意：虽然该配置与flycode的查询语法一致，但不支持参数查询以及权限黑白名单占位符方式，必须是‘var _cache_xxx =’ 开头,查询结果集将会缓存到xxx中</strong></em></p><ul><li>定义缓存后，缓存对象将被注入到&#39;CTX&#39;容器中，在flycode中的应用：</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//使用缓存：</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">String.</span><span style="color:#B392F0;">isBlank</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.kx_storelevel.dicvalue)){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> storelevel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> j </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,len </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CTX</span><span style="color:#E1E4E8;">.storelevels.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">;j</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">len;j</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">CTX</span><span style="color:#E1E4E8;">.storelevels[j].dicvalue </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.kx_storelevel.dicvalue){</span></span>
<span class="line"><span style="color:#E1E4E8;">            storelevel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">CTX</span><span style="color:#E1E4E8;">.storelevels[j]</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(storelevel </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">       errMsg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> errMsg </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;[终端级别]不存在！请在新增页面中，查看有效的终端级别;&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(storelevel.status </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">       errMsg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> errMsg </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;[终端级别]已经停用;&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.kx_kq_store.storelevel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> storelevel.dictionaryid;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//使用缓存：</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">String.</span><span style="color:#6F42C1;">isBlank</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.kx_storelevel.dicvalue)){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> storelevel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CTX</span><span style="color:#24292E;">.storelevels.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;j</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">len;j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">CTX</span><span style="color:#24292E;">.storelevels[j].dicvalue </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.kx_storelevel.dicvalue){</span></span>
<span class="line"><span style="color:#24292E;">            storelevel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">CTX</span><span style="color:#24292E;">.storelevels[j]</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(storelevel </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">       errMsg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> errMsg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;[终端级别]不存在！请在新增页面中，查看有效的终端级别;&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(storelevel.status </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">       errMsg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> errMsg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;[终端级别]已经停用;&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.kx_kq_store.storelevel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> storelevel.dictionaryid;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 不使用缓存：</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">String.</span><span style="color:#B392F0;">isBlank</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.kx_storelevel.dicvalue)){</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> storelevels </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> select d.dictionaryid,d.parentdictionaryid,d.status </span></span>
<span class="line"><span style="color:#E1E4E8;">                    from kx_storelevel d </span></span>
<span class="line"><span style="color:#E1E4E8;">                    where d.dicvalue </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {IN.kx_storelevel.dicvalue} </span><span style="color:#79B8FF;">NORULE</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(storelevels </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> storelevels.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    errMsg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> errMsg </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;[终端级别]不存在！请在新增页面中，查看有效的终端级别;&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(storelevels[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].status </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    errMsg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> errMsg </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;[终端级别]已经停用;&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.kx_kq_store.storelevel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> storelevels[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].dictionaryid;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 不使用缓存：</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">String.</span><span style="color:#6F42C1;">isBlank</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.kx_storelevel.dicvalue)){</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> storelevels </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> select d.dictionaryid,d.parentdictionaryid,d.status </span></span>
<span class="line"><span style="color:#24292E;">                    from kx_storelevel d </span></span>
<span class="line"><span style="color:#24292E;">                    where d.dicvalue </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {IN.kx_storelevel.dicvalue} </span><span style="color:#005CC5;">NORULE</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(storelevels </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> storelevels.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    errMsg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> errMsg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;[终端级别]不存在！请在新增页面中，查看有效的终端级别;&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(storelevels[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].status </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    errMsg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> errMsg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;[终端级别]已经停用;&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.kx_kq_store.storelevel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> storelevels[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].dictionaryid;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_3-3-1-1-2-数据绑定对象-类似mybatis的resultmap" tabindex="-1">3.3.1.1.2. 数据绑定对象（<strong>类似mybatis的resultMap</strong>） <a class="header-anchor" href="#_3-3-1-1-2-数据绑定对象-类似mybatis的resultmap" aria-label="Permalink to &quot;3.3.1.1.2. 数据绑定对象（**类似mybatis的resultMap**）&quot;">​</a></h3><p>该对象决定了业务对象的列和excel的列的对应关系，指导平台生成业务对象的入参。<br> 命名方式：&quot;_bind_ + 业务对象名&quot;，由实施人员在flycode中一次性定义，<strong>禁止在后续flycode中添加、删减、修改对象属性</strong>。后续flycode不能引用该对象。如下所示：<br> flycode绑定对象定义:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;">  _bind_xls_test </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">//业务对象名为“xls_test”</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;姓名&quot;</span><span style="color:#E1E4E8;">,  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;credit&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;学分&quot;</span><span style="color:#E1E4E8;">,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;birthday&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;生日&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;money&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;金额&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;">  _bind_xls_test </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">//业务对象名为“xls_test”</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;姓名&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;credit&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;学分&quot;</span><span style="color:#24292E;">,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;birthday&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;生日&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;money&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;金额&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>待导入的excel数据如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">姓名    学分     生日      金额</span></span>
<span class="line"><span style="color:#E1E4E8;">张三    </span><span style="color:#79B8FF;">99</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">2017</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">2.22</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">姓名    学分     生日      金额</span></span>
<span class="line"><span style="color:#24292E;">张三    </span><span style="color:#005CC5;">99</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">2017</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">2.22</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>执行flycode之前，平台会根据上述配置，自动封装入参，如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.xls_test </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;张三&quot;</span><span style="color:#E1E4E8;">,  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;credit&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;99&quot;</span><span style="color:#E1E4E8;">,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;birthday&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;2017-1-1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;money&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;2.22&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.xls_test </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;张三&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;credit&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;99&quot;</span><span style="color:#24292E;">,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;birthday&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;2017-1-1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;money&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;2.22&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_3-3-1-1-2-1-数据校验" tabindex="-1">3.3.1.1.2.1. 数据校验 <a class="header-anchor" href="#_3-3-1-1-2-1-数据校验" aria-label="Permalink to &quot;3.3.1.1.2.1. 数据校验&quot;">​</a></h4><p>数据校验函数由用户自己定义。如果数据有误，则抛出异常，系统将把异常的描述信息作为错误信息excel的错误描述。<br> 示例：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//定义了金额校验函数，金额必须大于0</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">moneyValFun</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">param1</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;开始调用moneyValFun了&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(param1) </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ERROR</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;金额必须大于0！&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//调用校验函数</span></span>
<span class="line"><span style="color:#B392F0;">moneyValFun</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.xls_test.money);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//定义了金额校验函数，金额必须大于0</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">moneyValFun</span><span style="color:#24292E;">(</span><span style="color:#E36209;">param1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;开始调用moneyValFun了&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(param1) </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERROR</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;金额必须大于0！&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//调用校验函数</span></span>
<span class="line"><span style="color:#6F42C1;">moneyValFun</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.xls_test.money);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_3-3-1-1-3-特殊需求处理" tabindex="-1">3.3.1.1.3. 特殊需求处理 <a class="header-anchor" href="#_3-3-1-1-3-特殊需求处理" aria-label="Permalink to &quot;3.3.1.1.3. 特殊需求处理&quot;">​</a></h3><p>平台不提供特殊需求的处理，一切特殊需求都放到flycode中处理。<br> 比如某个特殊需求：在导入某行excel数据的时候，如果数据库中已经有该行数据，则认为该excel数据是重复数据，需要根据配置来进行更新、追加、忽略等数据库操作。flycode可以按照如下步骤进行处理：</p><ul><li>步骤一：实施定义对象“_paramobj”（只有该对象的属性名以“_”开头的属性才能被web用户传参覆盖）的属性“_dupstrategy”,该属性在后续flycode中决定了特殊逻辑的处理策略。<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _paramobj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">//重复行导入策略： 1：更新；2：追加；3：忽略</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;_dupstrategy&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _paramobj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">//重复行导入策略： 1：更新；2：追加；3：忽略</span></span>
<span class="line"><span style="color:#032F62;">&quot;_dupstrategy&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li>步骤二：定义数据绑定对象，如下所示：<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//业务对象名为“xls_test”</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;">  _bind_xls_test </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;姓名&quot;</span><span style="color:#E1E4E8;">,  </span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;credit&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;学分&quot;</span><span style="color:#E1E4E8;">,    </span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;birthday&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;生日&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;money&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;金额&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//业务对象名为“xls_test”</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;">  _bind_xls_test </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;姓名&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line"><span style="color:#032F62;">&quot;credit&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;学分&quot;</span><span style="color:#24292E;">,    </span></span>
<span class="line"><span style="color:#032F62;">&quot;birthday&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;生日&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">&quot;money&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;金额&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li>步骤三：需求中，认为name、credit都相同的数据即为重复数据。以name、credit为条件查询数据库，确认该数据是否是重复数据：<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> xls_testdp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> select </span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">) num from xls_test where name</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{IN.xls_test.name} and credit</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{IN.xls_test.credit};</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(xls_testdp</span><span style="color:#F97583;">==</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> xls_testdp.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ERROR</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;查询xls_test的数目出错！&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(xls_testdp[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].num </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">//不是重复数据</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">//是重复数据</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> xls_testdp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> select </span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">) num from xls_test where name</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{IN.xls_test.name} and credit</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{IN.xls_test.credit};</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(xls_testdp</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> xls_testdp.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERROR</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;查询xls_test的数目出错！&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(xls_testdp[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].num </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#6A737D;">//不是重复数据</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#6A737D;">//是重复数据</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li>步骤四：执行重复数据处理逻辑：<div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(xls_testdp[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].num </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">//不是重复数据，直接插入数据库</span></span>
<span class="line"><span style="color:#79B8FF;">DB</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">insert</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.xls_test);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">//该行数据是重复数据，根据重复行处理策略进行处理</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(_xlsconf.dupstrategy </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//更新。DB.update函数的非第一个参数将作为update语句的where条件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//在本例中，将执行sql：update xls_test set birthday=? money=? where name=? and credit=?;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">DB</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.xls_test, </span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;credit&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(_xlsconf.dupstrategy </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//追加</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">DB</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">insert</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.xls_test);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(_xlsconf.dupstrategy </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//忽略</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ERROR</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;没有指定合法的重复行处理策略！&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(xls_testdp[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].num </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#6A737D;">//不是重复数据，直接插入数据库</span></span>
<span class="line"><span style="color:#005CC5;">DB</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.xls_test);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">//该行数据是重复数据，根据重复行处理策略进行处理</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(_xlsconf.dupstrategy </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//更新。DB.update函数的非第一个参数将作为update语句的where条件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//在本例中，将执行sql：update xls_test set birthday=? money=? where name=? and credit=?;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">DB</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.xls_test, </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;credit&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(_xlsconf.dupstrategy </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//追加</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">DB</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.xls_test);</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(_xlsconf.dupstrategy </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//忽略</span></span>
<span class="line"><span style="color:#24292E;">}</span><span style="color:#D73A49;">else</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERROR</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;没有指定合法的重复行处理策略！&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></li></ul><h3 id="_3-3-1-1-4-统计忽略导入的行" tabindex="-1">3.3.1.1.4. 统计忽略导入的行 <a class="header-anchor" href="#_3-3-1-1-4-统计忽略导入的行" aria-label="Permalink to &quot;3.3.1.1.4. 统计忽略导入的行&quot;">​</a></h3><p>如果需要忽略某行的导入，把该行以及忽略导入原因导出到错误excel，并统计入被忽略的行总数，<br> 执行</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ERROR</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;自定义忽略原因&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;impignore&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERROR</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;自定义忽略原因&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;impignore&quot;</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-3-1-1-5-跨表头导入" tabindex="-1">3.3.1.1.5. 跨表头导入 <a class="header-anchor" href="#_3-3-1-1-5-跨表头导入" aria-label="Permalink to &quot;3.3.1.1.5. 跨表头导入&quot;">​</a></h3><p>如果需要做跨表头导入，例如：</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>序号</td><td>组合</td></tr><tr><td>分组1</td><td>分组2</td></tr><tr><td>1</td><td>数据1</td></tr><tr><td>2</td><td>数据3</td></tr></tbody></table><p>绑定协议配置如下:</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 需要配置导入开始行做数据偏移</span></span>
<span class="line"><span style="color:#E1E4E8;">var _xlsconf = {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;startindex&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;N&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 字段映射使用 &quot;-&quot; 分隔组合字段与分组字段</span></span>
<span class="line"><span style="color:#E1E4E8;">var  _bind_xls_test = { </span><span style="color:#6A737D;">//业务对象名为“xls_test”</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;序号&quot;</span><span style="color:#E1E4E8;">,    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;data1&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;组合-分组1&quot;</span><span style="color:#E1E4E8;">,     </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;data2&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;组合-分组2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 需要配置导入开始行做数据偏移</span></span>
<span class="line"><span style="color:#24292E;">var _xlsconf = {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;startindex&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;N&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 字段映射使用 &quot;-&quot; 分隔组合字段与分组字段</span></span>
<span class="line"><span style="color:#24292E;">var  _bind_xls_test = { </span><span style="color:#6A737D;">//业务对象名为“xls_test”</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;序号&quot;</span><span style="color:#24292E;">,    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;data1&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;组合-分组1&quot;</span><span style="color:#24292E;">,     </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;data2&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;组合-分组2&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_3-3-1-2-excel导出" tabindex="-1">3.3.1.2. EXCEL导出 <a class="header-anchor" href="#_3-3-1-2-excel导出" aria-label="Permalink to &quot;3.3.1.2. EXCEL导出&quot;">​</a></h2><h3 id="_3-3-1-2-1-导出绑定对象数组-类似mybatis的resultmap" tabindex="-1">3.3.1.2.1. 导出绑定对象数组（<strong>类似mybatis的resultMap</strong>） <a class="header-anchor" href="#_3-3-1-2-1-导出绑定对象数组-类似mybatis的resultmap" aria-label="Permalink to &quot;3.3.1.2.1. 导出绑定对象数组（**类似mybatis的resultMap**）&quot;">​</a></h3><p>该对象决定了flycode的js数据对象和excel的列的对应关系。<br> 命名方式：&quot;_xlscolBind&quot;，由实施人员在flycode中一次性定义，<strong>禁止在后续flycode中添加、删减、修改该对象属性</strong>。后续flycode不能使用该对象。该数组对象的每个对象都代表了一个属性名与Excel列名的映射关系，&quot;field&quot;代表对象属性，&quot;column&quot;代表excel列名, 如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _xlscolBind </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;姓名&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;credit&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;学分&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;birthday&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;生日&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;money&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;金额&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _xlscolBind </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;姓名&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;credit&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;学分&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;birthday&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;生日&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;money&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;金额&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_3-3-1-2-1-1-web端用户专用配置-类似java项目的properties文件" tabindex="-1">3.3.1.2.1.1. web端用户专用配置（<strong>类似java项目的properties文件</strong>） <a class="header-anchor" href="#_3-3-1-2-1-1-web端用户专用配置-类似java项目的properties文件" aria-label="Permalink to &quot;3.3.1.2.1.1. web端用户专用配置（**类似java项目的properties文件**）&quot;">​</a></h4><p>这些配置描述导入excel的数据导出规则，不会影响flycode的代码执行逻辑。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;xls_test&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//导出的sheet名</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;sheetname&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;制定便捷计划&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//导出的excel名</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;filename&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot; 导出.xlsx&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;xls_test&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//导出的sheet名</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;sheetname&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;制定便捷计划&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//导出的excel名</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;filename&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot; 导出.xlsx&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_3-3-1-2-2-抽取数据库数据" tabindex="-1">3.3.1.2.2. 抽取数据库数据 <a class="header-anchor" href="#_3-3-1-2-2-抽取数据库数据" aria-label="Permalink to &quot;3.3.1.2.2. 抽取数据库数据&quot;">​</a></h3><p>通过执行select语句来抽取数据库数据。<br> flycode示例：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> param1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;张三&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SELECT</span><span style="color:#E1E4E8;"> name , credit , money  FROM xls_test WHERE name like {param1.name};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> param1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;张三&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SELECT</span><span style="color:#24292E;"> name , credit , money  FROM xls_test WHERE name like {param1.name};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>执行上述flycode，系统将生成对象数组：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [ {name:张三, credit:</span><span style="color:#79B8FF;">99</span><span style="color:#E1E4E8;">, money:</span><span style="color:#79B8FF;">22.2</span><span style="color:#E1E4E8;">}, {name:张三2, credit:</span><span style="color:#79B8FF;">88</span><span style="color:#E1E4E8;">, money:</span><span style="color:#79B8FF;">11.2</span><span style="color:#E1E4E8;">} ];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [ {name:张三, credit:</span><span style="color:#005CC5;">99</span><span style="color:#24292E;">, money:</span><span style="color:#005CC5;">22.2</span><span style="color:#24292E;">}, {name:张三2, credit:</span><span style="color:#005CC5;">88</span><span style="color:#24292E;">, money:</span><span style="color:#005CC5;">11.2</span><span style="color:#24292E;">} ];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-3-1-2-3-导出操作" tabindex="-1">3.3.1.2.3. 导出操作 <a class="header-anchor" href="#_3-3-1-2-3-导出操作" aria-label="Permalink to &quot;3.3.1.2.3. 导出操作&quot;">​</a></h3><p>由于flycode中“OUT”对象是默认输出对象，实施把js数据对象数组赋值给OUT.xlsdata对象即可视为完成导出操作。平台在生成导出excel的时候，会从OUT.xlsdata中抽取数据，并参照导出绑定对象（见3.8.2.1），最终生成excel文件。<br> 导出完整步骤如下所示：</p><ul><li>步骤一：实施定义导出绑定对象</li></ul><h3 id="_3-3-1-2-4-导出操作" tabindex="-1">3.3.1.2.4. 导出操作 <a class="header-anchor" href="#_3-3-1-2-4-导出操作" aria-label="Permalink to &quot;3.3.1.2.4. 导出操作&quot;">​</a></h3><p>执行“OUT._xlsData = temp;”即可导出excel，其中temp为导出数据对象数组。<br> 示例：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _xlscolBind </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;姓名&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;credit&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;学分&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;birthday&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;生日&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;money&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;金额&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _xlscolBind </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;姓名&quot;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;credit&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;学分&quot;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;birthday&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;生日&quot;</span></span>
<span class="line"><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;money&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;金额&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li><p>步骤二：构造js数据对象数组</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [ {name:张三, credit:</span><span style="color:#79B8FF;">99</span><span style="color:#E1E4E8;">, money:</span><span style="color:#79B8FF;">22.2</span><span style="color:#E1E4E8;">}, {name:张三2, credit:</span><span style="color:#79B8FF;">88</span><span style="color:#E1E4E8;">, money:</span><span style="color:#79B8FF;">11.2</span><span style="color:#E1E4E8;">} ];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [ {name:张三, credit:</span><span style="color:#005CC5;">99</span><span style="color:#24292E;">, money:</span><span style="color:#005CC5;">22.2</span><span style="color:#24292E;">}, {name:张三2, credit:</span><span style="color:#005CC5;">88</span><span style="color:#24292E;">, money:</span><span style="color:#005CC5;">11.2</span><span style="color:#24292E;">} ];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>步骤三：把js数据对象数组赋值给OUT.xlsdata</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">OUT</span><span style="color:#E1E4E8;">.xlsdata </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">OUT</span><span style="color:#24292E;">.xlsdata </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行完该flycode后，平台参照导出绑定对象“_xlscolBind”，最终生成如下excel：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">姓名    学分    生日    金额</span></span>
<span class="line"><span style="color:#E1E4E8;">张三    </span><span style="color:#79B8FF;">99</span><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">22.2</span></span>
<span class="line"><span style="color:#E1E4E8;">张三2   </span><span style="color:#79B8FF;">88</span><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">11.2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">姓名    学分    生日    金额</span></span>
<span class="line"><span style="color:#24292E;">张三    </span><span style="color:#005CC5;">99</span><span style="color:#24292E;">             </span><span style="color:#005CC5;">22.2</span></span>
<span class="line"><span style="color:#24292E;">张三2   </span><span style="color:#005CC5;">88</span><span style="color:#24292E;">             </span><span style="color:#005CC5;">11.2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h3 id="_3-3-1-2-5-跨列父表头" tabindex="-1">3.3.1.2.5. 跨列父表头 <a class="header-anchor" href="#_3-3-1-2-5-跨列父表头" aria-label="Permalink to &quot;3.3.1.2.5. 跨列父表头&quot;">​</a></h3><p>某些需求需要导出跨列父表头，如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">      终端信息                费用信息 </span></span>
<span class="line"><span style="color:#E1E4E8;">终端编号    终端名称    费用编号    费用名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Z1</span><span style="color:#E1E4E8;">       便利店1       </span><span style="color:#79B8FF;">F1</span><span style="color:#E1E4E8;">       驻场费用</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">      终端信息                费用信息 </span></span>
<span class="line"><span style="color:#24292E;">终端编号    终端名称    费用编号    费用名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Z1</span><span style="color:#24292E;">       便利店1       </span><span style="color:#005CC5;">F1</span><span style="color:#24292E;">       驻场费用</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>跨列父表头终端信息下设终端编号和终端名称，费用信息下设费用编号和费用名称。</p><p>新增“_xlsPcol1”对象来表示跨列表头（此为临时方案，后期会在IDE里进行配置）。“_xlsPcol1”中的“1”表示是第一行父表头，目前仅支持一行父表头。<br> 完整flycode如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//定义跨列父表头对象</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _xlsPcol1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;终端信息&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;span&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//表示跨两列</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;费用信息&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;span&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span><span style="color:#6A737D;">//表示跨两列</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//定义导出绑定对象数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _xlscolBind </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;zdbh&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;终端编号&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;zdmc&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;终端名称&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;fybh&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;费用编号&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;fymc&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;费用名称&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }   </span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//构造js数据对象数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [ {zdbh:</span><span style="color:#79B8FF;">Z1</span><span style="color:#E1E4E8;">, zdmc:便利店1, fybh:</span><span style="color:#79B8FF;">F1</span><span style="color:#E1E4E8;">, fymc:驻场费用}];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//赋值</span></span>
<span class="line"><span style="color:#79B8FF;">OUT</span><span style="color:#E1E4E8;">.xlsdata </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//定义跨列父表头对象</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _xlsPcol1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;终端信息&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;span&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//表示跨两列</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;费用信息&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;span&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span><span style="color:#6A737D;">//表示跨两列</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//定义导出绑定对象数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _xlscolBind </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;zdbh&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;终端编号&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;zdmc&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;终端名称&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;fybh&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;费用编号&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;fymc&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;费用名称&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }   </span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//构造js数据对象数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [ {zdbh:</span><span style="color:#005CC5;">Z1</span><span style="color:#24292E;">, zdmc:便利店1, fybh:</span><span style="color:#005CC5;">F1</span><span style="color:#24292E;">, fymc:驻场费用}];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//赋值</span></span>
<span class="line"><span style="color:#005CC5;">OUT</span><span style="color:#24292E;">.xlsdata </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>注意：跨列表头对象、导出绑定对象数组内部元素的顺序将与导出的excel列的顺序一致</p><h3 id="_3-3-1-2-6-注意事项" tabindex="-1">3.3.1.2.6. 注意事项 <a class="header-anchor" href="#_3-3-1-2-6-注意事项" aria-label="Permalink to &quot;3.3.1.2.6. 注意事项&quot;">​</a></h3><p>目前导出的最大行数为20000条。<br> 导出时sql语句需要添加paging标记。</p><h3 id="_3-3-1-2-7-导出格式扩展" tabindex="-1">3.3.1.2.7. 导出格式扩展 <a class="header-anchor" href="#_3-3-1-2-7-导出格式扩展" aria-label="Permalink to &quot;3.3.1.2.7. 导出格式扩展&quot;">​</a></h3><p>导出格式支持，列宽度、数据类型、动态文本(kv映射)；在_xlscolBind中添加以下字段<br> 新版导出的字段映射设置，仅支持列宽度和数据类型，动态文本可直接在flycode中处理，更加灵活。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_xlscolBind = [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;映射字段名&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;excel列名&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;width&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;宽度：如:100&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;数据类型,默认:string；string 文本，double 数值型(可统计)&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;dynamictext&quot;</span><span style="color:#E1E4E8;">:{ </span><span style="color:#6A737D;">// 动态文本</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;原数据1&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;映射后的新数据1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;原数据2&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;映射后的新数据2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_xlscolBind = [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;映射字段名&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;excel列名&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;width&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;宽度：如:100&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;数据类型,默认:string；string 文本，double 数值型(可统计)&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;dynamictext&quot;</span><span style="color:#24292E;">:{ </span><span style="color:#6A737D;">// 动态文本</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;原数据1&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;映射后的新数据1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;原数据2&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;映射后的新数据2&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>例:</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">_xlscolBind = [</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;field&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;storecode&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;column&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;性别&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;width&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;String&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;dynamictext&quot;</span><span style="color:#E1E4E8;">:{ </span><span style="color:#6A737D;">// 数据中的99和88，将被映射为高分和低分。</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;99&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;高分&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;88&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;低分&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">},</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">_xlscolBind = [</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;field&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;storecode&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;column&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;性别&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;width&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;String&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;dynamictext&quot;</span><span style="color:#24292E;">:{ </span><span style="color:#6A737D;">// 数据中的99和88，将被映射为高分和低分。</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;99&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;高分&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;88&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;低分&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_3-3-1-3-复杂结构导出方案" tabindex="-1">3.3.1.3. 复杂结构导出方案 <a class="header-anchor" href="#_3-3-1-3-复杂结构导出方案" aria-label="Permalink to &quot;3.3.1.3. 复杂结构导出方案&quot;">​</a></h2><p>对于非二维表的复杂结构导出, 比如多维数据透视表.建议仅实现二维数据导出.将复杂结构生成交由excel的宏命令去生成.</p><ul><li>将复杂的结构生成事先编写excel宏命令,并保存为导出模板文件.</li><li>在IDE的文件管理中,上传导出模板.</li><li>导出服务提供 <strong>指定模板文件</strong> ,如下:</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 在flycode可使用如下定义指定导出模板使用的文件.</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> _xlscolTemplate </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;文件key&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 在flycode可使用如下定义指定导出模板使用的文件.</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> _xlscolTemplate </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;文件key&quot;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>导出服务将根据以上关键字,引用导出模板,导出二维数据.并生成一个带有宏命令的excel文件.</li><li>使用以上方法,实现excel导出的无所不能.</li></ul>`,83),e=[o];function t(c,r,E,y,i,u){return n(),a("div",null,e)}const F=s(p,[["render",t]]);export{b as __pageData,F as default};
