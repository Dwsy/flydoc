import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b1e56e49.js";const b=JSON.parse('{"title":"InteractiveWebView","description":"","frontmatter":{"title":"InteractiveWebView","date":"2020-05-20T17:12:51.000Z"},"headers":[],"relativePath":"doc/wpdoc/InteractiveWebView.md","filePath":"doc/wpdoc/InteractiveWebView.md"}'),p={name:"doc/wpdoc/InteractiveWebView.md"},o=l(`<h1 id="interactive-web-view交互式网页" tabindex="-1">Interactive Web View交互式网页 <a class="header-anchor" href="#interactive-web-view交互式网页" aria-label="Permalink to &quot;Interactive Web View交互式网页&quot;">​</a></h1><p>移动端的交互式WebView控件，用于实现更加个性化的展示页面。</p><p>该控件支持数据的显示，表单链接，数据请求等，但不支持数据采集。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;interactivewebview&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;refreshable&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;topic&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;homepage&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;eventlist&quot;</span><span style="color:#E1E4E8;">:[</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">&quot;trigger&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;onload&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">&quot;handler&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;loaddata&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">&quot;trigger&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;clickkpi&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">&quot;handler&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;handler_code1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">&quot;trigger&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;clickvisitstore&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">&quot;handler&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;handler_code2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">&quot;trigger&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;linktosomepage&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">&quot;handler&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;handler_code3&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;interactivewebview&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;refreshable&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;topic&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;homepage&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;eventlist&quot;</span><span style="color:#24292E;">:[</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">&quot;trigger&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;onload&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">&quot;handler&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;loaddata&quot;</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">&quot;trigger&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;clickkpi&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">&quot;handler&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;handler_code1&quot;</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">&quot;trigger&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;clickvisitstore&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">&quot;handler&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;handler_code2&quot;</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">&quot;trigger&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;linktosomepage&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">&quot;handler&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;handler_code3&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ul><li><p>refreshable</p><p>是否支持下拉刷新，如果支持，将会在下拉后执行 <code>onrefresh</code> 对应的事件。</p></li><li><p>topic</p><p>所有的资源文件所在的文件夹的名字，控件将会在该文件夹下面找名字为 <code>page.html</code> 的表单页面进行加载</p></li><li><p>eventlist</p><p>和其他的控件一样，用于指定事件触发点的地方，不同之处在于，该控件除了固有的 <code>onload</code> , <code>onrefresh</code> 等事件外，还可以自定义添加 <code>trigger</code></p></li></ul><h2 id="webview-调用控件方法" tabindex="-1">WebView 调用控件方法 <a class="header-anchor" href="#webview-调用控件方法" aria-label="Permalink to &quot;WebView 调用控件方法&quot;">​</a></h2><p>目前需要实现一个能够触发控件事件的接口即可</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">xpe_callEvent</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">trigger</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">completion</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">xpe_callEvent</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;linktosomepage&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">xpe_callEvent</span><span style="color:#24292E;">(</span><span style="color:#E36209;">trigger</span><span style="color:#24292E;">, </span><span style="color:#E36209;">params</span><span style="color:#24292E;">, </span><span style="color:#E36209;">completion</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">xpe_callEvent</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;linktosomepage&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><p>trigger</p><p>调用外部事件的触发关键字，用于在控件的 <code>eventlist</code> 中查找 <code>trigger</code> 属性的值与之相等的的对应的handler事件进行执行。</p></li><li><p>params</p><p>传递出来的参数，可以是数组或者是字典类型的 <code>json</code> 数据，该参数可以为空</p><blockquote><p>目前只接受 <code>String</code> 类型为 key 的字典型数据作为参数</p></blockquote></li><li><p>completion</p><p>事件执行完成后的回调方法，接收三个参数</p><p><code>completion(isSuccess, errorMsg, returnParam)</code></p><blockquote><p>目前这三个参数均没有返回，只是简单告知事件执行结束</p></blockquote></li></ul><h2 id="控件调用-webview的方法" tabindex="-1">控件调用 WebView的方法 <a class="header-anchor" href="#控件调用-webview的方法" aria-label="Permalink to &quot;控件调用 WebView的方法&quot;">​</a></h2><blockquote><p>该方法应该由该控件内嵌页面的编写者在其JavaScript代码中实现</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">xpe_reciveData</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">xpe_reciveData</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>data</p><p>接收到的数据，可以是数组或者是字典类型的 <code>json</code> 数据</p></li><li><p>key</p><p>接收到的数据用途的字符串类型的标识，由控件在原始参数中获取约定字段 <code>__interactive_key</code> 的值，可以为空</p></li></ul><h2 id="获取用户信息的方法" tabindex="-1">获取用户信息的方法 <a class="header-anchor" href="#获取用户信息的方法" aria-label="Permalink to &quot;获取用户信息的方法&quot;">​</a></h2><p>由于大多数情况下，还需要获取用户信息，因此提供一个方便的方法给页面编写者调用</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">xpe_userInfo</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">completion</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">xpe_userInfo</span><span style="color:#24292E;">(</span><span style="color:#E36209;">completion</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>该方法返回用户的基本信息，在通过回调completion返回结果，参看 <code>xpe_callEvent</code> 中的 completion</p>`,17),e=[o];function t(c,r,i,E,y,u){return n(),a("div",null,e)}const q=s(p,[["render",t]]);export{b as __pageData,q as default};
