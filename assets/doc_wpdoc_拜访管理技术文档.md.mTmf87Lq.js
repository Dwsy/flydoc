import{_ as n,o as a,c as s,R as e}from"./chunks/framework.S1SDgkSw.js";const g=JSON.parse('{"title":"拜访管理技术文档","description":"","frontmatter":{"title":"拜访管理技术文档","date":"2023-06-15T16:38:39.000Z"},"headers":[],"relativePath":"doc/wpdoc/拜访管理技术文档.md","filePath":"doc/wpdoc/拜访管理技术文档.md"}'),p={name:"doc/wpdoc/拜访管理技术文档.md"},t=e(`<h1 id="拜访管理技术文档" tabindex="-1">拜访管理技术文档 <a class="header-anchor" href="#拜访管理技术文档" aria-label="Permalink to &quot;拜访管理技术文档&quot;">​</a></h1><p>1、将项目git clone <a href="http://172.16.0.141/smart100/webNative.git" target="_blank" rel="noreferrer">http://172.16.0.141/smart100/webNative.git</a> 到本地。</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E5%9B%BE%E7%89%871-8.png" alt="图片1-8.png"></p><p>2、在webNative/src/component目录下建立自己的二开控件文件夹,如testDemo，在testDemo文件夹建立表单协议test.j和testDemo.vue文件作为控件视图层，并引入import XtWeb from ‘xtion-web’<br> 用于继承引擎executeEvent, getView,setView等方法</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E5%9B%BE%E7%89%872-7.png" alt="图片2-7.png"></p><p>3、webNative/src/component/index.js里引进你的控件，webNative/src/component/package.json里的name改为与你的控件文件名一致</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E5%9B%BE%E7%89%873-7.png" alt="图片3-7.png"></p><p>4、开发实时预览，test.js手写入表单协议或者IDE生成一份协议复制进来 , 运行命令npm run dev, 打开浏览器执行地址，点击开始调试，输入帐号登录，即可调试二开控件</p><p>5、开发完成后打包流程，直接运行npm run build，目录bundle下即为打包的压缩文件index.js , 源码压缩包dist.zip, 上传IDE提供配置使用（dist.zip会保留整个component下的二开控件源码，建议上传IDE作为备份）</p><p>6、如何上传IDE</p><p>（1）在IDE工具--UI控件里新建自定义控件 ，输入基本信息，然后再代码管理分别上传打包的index.js和dist.zip文件。</p><p>（2）然后在后台重新登陆（如果没效果在刷新下），就能看到开发的二开控件。</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E5%9B%BE%E7%89%874-5.png" alt="图片4-5.png"></p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E5%9B%BE%E7%89%875-4.png" alt="图片5-4.png"></p><p>内置方法补充说明（内置方法用于控件与IDE进行交互）：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/**</span></span>
<span class="line"><span>*@param {String} eventcode: 表单协议配置的eventlist对应的handler事件code值</span></span>
<span class="line"><span>*@param {Object} context传入当前控件上下文关系</span></span>
<span class="line"><span>*/</span></span>
<span class="line"><span>this.engine.executeEvent(eventcode, context)，web引擎内置方法，用于调用表单协议事件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E5%9B%BE%E7%89%876-4.png" alt="图片6-4.png"></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/**</span></span>
<span class="line"><span>*@param {String} type: 取值类型，一般是value</span></span>
<span class="line"><span>*@param {Object} getter: 取值操作的附加信息，按照标准表单配置，getter结构固定为getter: { ctrl: { component:’xxx1’, code: ‘xxx2’}}</span></span>
<span class="line"><span>*@return {Any} 返回当前操作对控件的取值内容</span></span>
<span class="line"><span>*/</span></span>
<span class="line"><span>getView(type, getter) return：web引擎内置方法，用于暴露给上层（IDE）对控件进行取值（依据取值配置会多次触发）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E5%9B%BE%E7%89%877-3.png" alt="图片7-3.png"></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/**</span></span>
<span class="line"><span>*@param {Any} data: 赋值操作的数据源（支持多种数据结构，需要对数据进行处理）</span></span>
<span class="line"><span>*@param {String} type: 赋值类型，一般是value</span></span>
<span class="line"><span>*@param {Object} setter: 赋值操作的附加信息，按照标准表单配置，setter结构为setter: { ctrl: { component:’xxx1’, code: ‘xxx2’}}</span></span>
<span class="line"><span>*/</span></span>
<span class="line"><span>setView(data, type, setter): web引擎内置方法，用于暴露给上层（IDE）对控件进行赋值（依据赋值配置会多次触发，加载控件的时候就会出发此函数）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,20),i=[t];function c(l,r,o,d,m,b){return a(),s("div",null,i)}const h=n(p,[["render",c]]);export{g as __pageData,h as default};
