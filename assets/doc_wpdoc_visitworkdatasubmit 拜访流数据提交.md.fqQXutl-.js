import{_ as s,o as a,c as i,R as t}from"./chunks/framework.S1SDgkSw.js";const c=JSON.parse('{"title":"visitworkdatasubmit 拜访流数据提交","description":"","frontmatter":{"title":"visitworkdatasubmit 拜访流数据提交","date":"2020-12-21T15:22:21.000Z"},"headers":[],"relativePath":"doc/wpdoc/visitworkdatasubmit 拜访流数据提交.md","filePath":"doc/wpdoc/visitworkdatasubmit 拜访流数据提交.md"}'),n={name:"doc/wpdoc/visitworkdatasubmit 拜访流数据提交.md"},e=t(`<h1 id="visitworkdatasubmit" tabindex="-1">VisitWorkDataSubmit <a class="header-anchor" href="#visitworkdatasubmit" aria-label="Permalink to &quot;VisitWorkDataSubmit&quot;">​</a></h1><h2 id="visitworkdatasubmit-数据提交" tabindex="-1">VisitWorkDataSubmit 数据提交 <a class="header-anchor" href="#visitworkdatasubmit-数据提交" aria-label="Permalink to &quot;VisitWorkDataSubmit 数据提交&quot;">​</a></h2><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;visitworkdatasubmit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;logiccode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;111111111111&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;queue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;mode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;network&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;getter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;setter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;nextstep&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pagecode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pagecount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>拜访流数据提交的属性中，名字和datasubmit一致的，其含义也一致，可以直接参考datasubmit。</p><p>默认情况下，提交完成后转跳到下一个拜访流节点页面</p><p>若是最后一步：</p><p>1.当列表中所有节点都完成（跳过算一种完成状态），返回到拜访流列表页面前一个页面</p><p>2.当列表中含有未完成节点（如非必做节点），返回到拜访流列表页面</p><p>也可以通过nextstep指定转跳规则</p><h3 id="nextstep" tabindex="-1">nextstep <a class="header-anchor" href="#nextstep" aria-label="Permalink to &quot;nextstep&quot;">​</a></h3><p>数据提交完毕，下一步应转跳到那个页面</p><table><thead><tr><th>属性</th><th>含义</th><th>取值</th></tr></thead><tbody><tr><td>type</td><td>转跳类型</td><td>return：返回到一个指定的页面</td></tr><tr><td>pagecode</td><td>页面code</td><td></td></tr><tr><td>pagecount</td><td>返回的页面级数，只有当pagecode为空的时候才会使用pagecount来判断返回路径</td><td>pagecout &gt; 0 &amp;&amp; pagecout &lt; 页面栈数</td></tr></tbody></table>`,12),p=[e];function l(h,k,r,d,o,u){return a(),i("div",null,p)}const b=s(n,[["render",l]]);export{c as __pageData,b as default};
