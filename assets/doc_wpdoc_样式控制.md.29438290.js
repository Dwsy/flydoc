import{_ as t,o as a,c as s,Q as n}from"./chunks/framework.d084db19.js";const b=JSON.parse('{"title":"样式控制","description":"","frontmatter":{"title":"样式控制","date":"2020-05-19T19:39:22.000Z"},"headers":[],"relativePath":"doc/wpdoc/样式控制.md","filePath":"doc/wpdoc/样式控制.md"}'),l={name:"doc/wpdoc/样式控制.md"},e=n(`<h1 id="控件样式控制" tabindex="-1">控件样式控制 <a class="header-anchor" href="#控件样式控制" aria-label="Permalink to &quot;控件样式控制&quot;">​</a></h1><p>控件可以根据不同的需求，呈现出不同的形态，控制输入类型</p><p>控件样式控制主要用于对不同的控件在不同的场景需求下，自动调整样式。</p><h2 id="影响控件样式的因素" tabindex="-1">影响控件样式的因素 <a class="header-anchor" href="#影响控件样式的因素" aria-label="Permalink to &quot;影响控件样式的因素&quot;">​</a></h2><h3 id="控件标题样式" tabindex="-1">控件标题样式 <a class="header-anchor" href="#控件标题样式" aria-label="Permalink to &quot;控件标题样式&quot;">​</a></h3><p>用于设置输入型控件的标题与内容的分布位置。不支持动态设置。</p><table><thead><tr><th>名称</th><th>英文名</th><th>说明</th><th>配置方式</th></tr></thead><tbody><tr><td>水平弹性</td><td>horizontal_flex</td><td>（手机端特有）灵活处理显示样式，适合屏幕较小，且标题长度变化较大的场景</td><td>布局控件属性</td></tr><tr><td>水平固宽</td><td>horizontal_fix</td><td>适合标题长度可控，需要整体布局更整齐的场景，手机端和web端的显示样式有所不同</td><td>布局控件属性</td></tr><tr><td>垂直</td><td>vertical</td><td>适合题长度变化较大，且需要整体布局更整齐的场景，手机端和web端的显示样式有所不同</td><td>布局控件属性</td></tr><tr><td>简化</td><td>basic</td><td>适合需要密集输入的场景，如table，另外list，layout等也能设置为简化样式</td><td>布局控件属性+table+filter</td></tr><tr><td>自动</td><td>auto</td><td>默认值，即自动使用上级样式</td><td>布局控件属性</td></tr></tbody></table><blockquote><p>简化模式并非所有录入型控件均支持，具体参看附录。</p><p>自动样式时，如果上级是数组型控件，将使用该数组型控件的默认样式，如table和list都是basic，不再继续向上级获取样式，如果要调整数组型控件内部的控件样式，可以通过修改row控件的样式，或者再内嵌layout。</p></blockquote><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 表单级的设置将会影响整个表单中所有的输入控件，包括弹窗中的。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 如果某个控件自身设置了指定的标题样式（非auto），那么该控件及其子控件将不受表单级设置的影响</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;pageinfo&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;ctrllayout&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;horizontal_fix&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;ctrltitlewidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;110&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//只在 ctrllayout == horizontal_fix 时有效，web端的默认值为110，手机端为88。支持设置百分比</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;panel&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;ctrllayout&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;auto&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;ctrltitlewidth&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 表单级的设置将会影响整个表单中所有的输入控件，包括弹窗中的。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 如果某个控件自身设置了指定的标题样式（非auto），那么该控件及其子控件将不受表单级设置的影响</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;pageinfo&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;ctrllayout&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;horizontal_fix&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;ctrltitlewidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;110&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//只在 ctrllayout == horizontal_fix 时有效，web端的默认值为110，手机端为88。支持设置百分比</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;panel&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;ctrllayout&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;auto&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;ctrltitlewidth&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h3><p>在不同的场景下，录入型控件和部分数组型控件（如table）的会使用不同场景样式进行显示。</p><p>控件的场景样式有：</p><table><thead><tr><th>场景</th><th>usage值</th><th>pagestatus值</th><th>说明</th></tr></thead><tbody><tr><td>录入</td><td>input</td><td>1，2</td><td>录入状态下，用于数据采集，默认值</td></tr><tr><td>只读</td><td>readonly</td><td>3</td><td>禁止录入的状态，控件样式依然是录入的样式（此处暂时兼容现有样式实现即可）</td></tr><tr><td>查看</td><td>view</td><td>4</td><td>用于信息查看，只显示信息，显示更紧凑清晰</td></tr><tr><td>打印</td><td>print</td><td>5</td><td>用于表单打印预览和打印的内容输出，将会使用高对比度的颜色，去掉图标等</td></tr><tr><td>自动</td><td>auto</td><td>无</td><td>控件默认都是自动场景，即继承上层场景，而整个表单的默认场景是录入 场景</td></tr></tbody></table><p>pagestatus 值为影响整个表单中未设置 usage 值的容器控件。只有容器控件（如layout，panel，table）才支持手动设置 usage 值，并且设置后，将不受 pagestatus 状态影响。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;panel&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">&quot;usage&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;auto&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;panel&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">&quot;usage&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;auto&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>usage</code> 属性不支持 flycode 动态设置（未来应该需要支持通过 flycode 设置 pagestatus 值来整体刷新表单）。</p><h3 id="控件形态" tabindex="-1">控件形态 <a class="header-anchor" href="#控件形态" aria-label="Permalink to &quot;控件形态&quot;">​</a></h3><table><thead><tr><th>形态</th><th>说明</th></tr></thead><tbody><tr><td>单行输入</td><td>例如文本框，单选下拉框等，控件高度固定，内容只显示一行的控件</td></tr><tr><td>多行输入</td><td>例如大文本框，支持多选的各类picker等，其内容高度可以根据内容自动调整</td></tr><tr><td>特定输入</td><td>例如照片，附件等，有着特殊形态的内容输入的控件，通常这类控件的高度也能随着内容改变</td></tr></tbody></table><h3 id="控件状态" tabindex="-1">控件状态 <a class="header-anchor" href="#控件状态" aria-label="Permalink to &quot;控件状态&quot;">​</a></h3><p>当控件处在 <code>录入场景</code> 下时，控件的以下属性会影响控件的显示的通用属性包括</p><table><thead><tr><th>控件状态</th><th>说明</th></tr></thead><tbody><tr><td>只读</td><td>会影响控件的显示，如灰色背景，图标变暗等。</td></tr><tr><td>必填</td><td>主要是会在控件标题处显示必填标记，如果是简化模式，控件不显示该标记。</td></tr><tr><td>错误</td><td>控件有错误提示信息时的状态，会根据具体的样式，生成合适的提示样式。</td></tr></tbody></table><h3 id="其他控件样式属性" tabindex="-1">其他控件样式属性 <a class="header-anchor" href="#其他控件样式属性" aria-label="Permalink to &quot;其他控件样式属性&quot;">​</a></h3><p>对于特定的控件，如button，text，image等，有其特有的样式控制属性，这些参看对应控件的协议说明。</p><h2 id="控件样式总规则" tabindex="-1">控件样式总规则 <a class="header-anchor" href="#控件样式总规则" aria-label="Permalink to &quot;控件样式总规则&quot;">​</a></h2><h3 id="web端" tabindex="-1">Web端 <a class="header-anchor" href="#web端" aria-label="Permalink to &quot;Web端&quot;">​</a></h3><ul><li>表单 <ol><li>摘要模式下，背景为白色；录入模式下，背景为浅灰，突出白色可编辑区域。</li></ol></li><li>布局容器 <ol><li>对于 layout 这种纯布局元素，保持不变</li><li>对于 panel 这类带格式的布局元素，提供默认的</li></ol></li></ul><h2 id="选择类控件样式说明" tabindex="-1">选择类控件样式说明 <a class="header-anchor" href="#选择类控件样式说明" aria-label="Permalink to &quot;选择类控件样式说明&quot;">​</a></h2><h3 id="手机端" tabindex="-1">手机端 <a class="header-anchor" href="#手机端" aria-label="Permalink to &quot;手机端&quot;">​</a></h3><p>以下为非树形结构的通用数据选择（即 key-value 形式选择）</p><table><thead><tr><th>选项数量\\选则数量</th><th>1</th><th>1 ~ 10</th><th>1 ~ 100</th><th>大于 100</th></tr></thead><tbody><tr><td>1</td><td>勾选按钮，状态按钮</td><td>--</td><td>--</td><td>--</td></tr><tr><td>2</td><td>勾选按钮，开关，选择框</td><td>选择框</td><td>--</td><td>--</td></tr><tr><td>2~10</td><td>选择框，下拉框，对象选择</td><td>选择框，下拉框，对象选择</td><td>--</td><td>--</td></tr><tr><td>10~20</td><td>下拉框，对象选择</td><td>下拉框，对象选择</td><td>下拉框，对象选择</td><td>--</td></tr><tr><td>1~200</td><td>选择列表，对象选择</td><td>选择列表，对象选择</td><td>选择列表，对象选择</td><td>选择列表，对象选择</td></tr><tr><td>大于 200</td><td>对象选择</td><td>对象选择</td><td>对象选择</td><td>对象选择</td></tr><tr><td>选择显示原则</td><td>直接显示</td><td>直接显示或者省略显示</td><td>省略显示</td><td>简要显示</td></tr><tr><td>选择显示原则</td><td></td><td></td><td></td><td></td></tr></tbody></table><h1 id="旧样式协议" tabindex="-1">旧样式协议 <a class="header-anchor" href="#旧样式协议" aria-label="Permalink to &quot;旧样式协议&quot;">​</a></h1><p>以下为旧的样式设计，目前依然兼容</p><h2 id="基本形态分类" tabindex="-1">基本形态分类 <a class="header-anchor" href="#基本形态分类" aria-label="Permalink to &quot;基本形态分类&quot;">​</a></h2><p>目前主要分为以下五种形态</p><table><thead><tr><th>key</th><th>usage</th></tr></thead><tbody><tr><td>plain</td><td>指控件自身不用提供border，由其所在容器提供</td></tr><tr><td>card</td><td>和plain类似，不同之处在于通常控件显示的宽度更窄一点</td></tr><tr><td>free</td><td>控件需要提供border，用于标识控件的显示范围</td></tr><tr><td>grid/basic</td><td>网格模式，用在显示区域很小的地方，通常是表格</td></tr><tr><td>compact</td><td>紧凑模式，用于显示只读的信息，可以最大限度的利用空间显示信息</td></tr><tr><td>print</td><td>打印模式，用于显示打印信息，此时和紧凑模式基本一致，但所有字体颜色变为纯黑色</td></tr><tr><td></td><td></td></tr></tbody></table><p>以文本输入框为例：</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/BGView1.png" alt=""></p><h3 id="compact" tabindex="-1">Compact <a class="header-anchor" href="#compact" aria-label="Permalink to &quot;Compact&quot;">​</a></h3><p>该模式下控件显示规则如下：</p><ol><li>标题型控件不显示边框，控件内容按正常文字颜色显示，控件标题显示为粗体。</li><li>panel和layout控件将不显示任何分割线，panel会继续保留边框，行高变为30pt</li><li>表格将使用compact模式显示</li></ol><h2 id="协议约定" tabindex="-1">协议约定 <a class="header-anchor" href="#协议约定" aria-label="Permalink to &quot;协议约定&quot;">​</a></h2><p>默认的，所有的控件都具有一个叫 <code>mode</code> 的属性，用于控制其显示模式</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;somekindctrl&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;mode&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;free&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;somekindctrl&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;mode&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;free&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>不同的前端，mode的默认值不同</p><table><thead><tr><th>前端类型</th><th>mode默认值</th></tr></thead><tbody><tr><td>手机端</td><td>plain</td></tr><tr><td>web端</td><td>free</td></tr></tbody></table><h2 id="mode隐式继承" tabindex="-1">mode隐式继承 <a class="header-anchor" href="#mode隐式继承" aria-label="Permalink to &quot;mode隐式继承&quot;">​</a></h2><p>由于控件大多数时候的显示模式其实是由其所在的容器决定的，所以大多数时候不需要手动的去设置控件的显示模式，而是直接继承其父容器的mode属性值。</p><p>不同的容器控件有着不同的默认mode值：textinput</p><table><thead><tr><th>ctrl</th><th>in mobile</th><th>in web</th></tr></thead><tbody><tr><td>layout</td><td>plain</td><td>free</td></tr><tr><td>panel</td><td>plain</td><td>free</td></tr><tr><td>tabboard</td><td>plain</td><td>free</td></tr><tr><td>filter</td><td>free</td><td>free</td></tr><tr><td>list</td><td>basic</td><td>basic</td></tr><tr><td>sectionlist</td><td>basic</td><td>basic</td></tr><tr><td>table</td><td>grid</td><td>grid</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p>容器控件本身通常不会受mode影响，其mode属性用于控制子控件样式</p><h2 id="表单模式对mode的影响" tabindex="-1">表单模式对mode的影响 <a class="header-anchor" href="#表单模式对mode的影响" aria-label="Permalink to &quot;表单模式对mode的影响&quot;">​</a></h2><table><thead><tr><th>表单模式</th><th>影响</th></tr></thead><tbody><tr><td>新增</td><td>无</td></tr><tr><td>编辑</td><td>无</td></tr><tr><td>查看</td><td>默认全部更改为 compact</td></tr><tr><td>打印</td><td>默认全部更改为 print</td></tr></tbody></table>`,52),o=[e];function p(d,r,c,i,u,h){return a(),s("div",null,o)}const E=t(l,[["render",p]]);export{b as __pageData,E as default};
