import{_ as e,c as o,o as a,U as l}from"./chunks/framework.K-r7inPk.js";const g=JSON.parse('{"title":"Page Render Flow 表单渲染过程","description":"","frontmatter":{"title":"Page Render Flow 表单渲染过程","date":"2020-05-19T19:34:51.000Z"},"headers":[],"relativePath":"doc/wpdoc/Page Render Flow 表单渲染过程.md","filePath":"doc/wpdoc/Page Render Flow 表单渲染过程.md"}'),d={name:"doc/wpdoc/Page Render Flow 表单渲染过程.md"},t=l('<h2 id="page-render-flow-表单渲染过程" tabindex="-1">Page Render Flow 表单渲染过程 <a class="header-anchor" href="#page-render-flow-表单渲染过程" aria-label="Permalink to &quot;Page Render Flow 表单渲染过程&quot;">​</a></h2><p>大体处理步骤如下</p><ol><li>获取表单的 json 数据</li><li>转换为 Model 树</li><li>如果表单为功能表单，则此时针对其特有功能对表单Model树进行调整</li><li>创建 ViewModel 树</li><li>执行 <code>initial</code> 中的事件</li><li>如果此时传参中有设置 <code>__pagestaus</code> ，则根据其值对ViewModel进行调整（主要是只读）</li><li>执行 Page 的 <code>onload</code> 事件</li><li>深度优先创建 View 树，并同时执行对应控件的 <code>onload</code> 事件</li></ol>',3),i=[t];function _(r,c,n,s,p,w){return a(),o("div",null,i)}const f=e(d,[["render",_]]);export{g as __pageData,f as default};
