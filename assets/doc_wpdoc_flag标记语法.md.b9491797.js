import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b1e56e49.js";const F=JSON.parse('{"title":"flag标记语法","description":"","frontmatter":{"title":"flag标记语法","date":"2020-07-03T17:44:42.000Z"},"headers":[],"relativePath":"doc/wpdoc/flag标记语法.md","filePath":"doc/wpdoc/flag标记语法.md"}'),p={name:"doc/wpdoc/flag标记语法.md"},o=l(`<h1 id="_3-1-2-3-标记语法" tabindex="-1">3.1.2.3. 标记语法 <a class="header-anchor" href="#_3-1-2-3-标记语法" aria-label="Permalink to &quot;3.1.2.3. 标记语法&quot;">​</a></h1><h2 id="_3-1-2-3-1-分页标记" tabindex="-1">3.1.2.3.1. 分页标记 <a class="header-anchor" href="#_3-1-2-3-1-分页标记" aria-label="Permalink to &quot;3.1.2.3.1. 分页标记&quot;">​</a></h2><p>则会根据前端提供的分页信息，自动组装分页相关的sql语句。</p><p><strong>API</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 在flyQL语句结尾加上 paging 或 PAGING的标记，则引擎会自动对结果进行分页,并统计数据总条数</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SELECT</span><span style="color:#E1E4E8;"> xx </span><span style="color:#79B8FF;">FROM</span><span style="color:#E1E4E8;"> xxx paging;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 在flyQL语句结尾加上 paging 或 PAGING的标记，则引擎会自动对结果进行分页,并统计数据总条数</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SELECT</span><span style="color:#24292E;"> xx </span><span style="color:#005CC5;">FROM</span><span style="color:#24292E;"> xxx paging;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><p><strong>例子</strong>: 查询门店信息，并分页</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SELECT</span><span style="color:#E1E4E8;"> storeid, storename FROM kx_store PAGING;</span></span>
<span class="line"><span style="color:#79B8FF;">OUT</span><span style="color:#E1E4E8;">.kx_store </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SELECT</span><span style="color:#24292E;"> storeid, storename FROM kx_store PAGING;</span></span>
<span class="line"><span style="color:#005CC5;">OUT</span><span style="color:#24292E;">.kx_store </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>输出结果：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;OUT&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;kx_store&quot;</span><span style="color:#E1E4E8;">:[</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">&quot;storeid&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">&quot;storename&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">...</span><span style="color:#6A737D;">//5条记录</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;__paging&quot;</span><span style="color:#E1E4E8;">:{    </span><span style="color:#6A737D;">// 有分页时，输出会增加一个内置对象__paging</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;__pageindex&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">,  </span><span style="color:#6A737D;">// 第1页</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;__pagesize&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;5&quot;</span><span style="color:#E1E4E8;">,   </span><span style="color:#6A737D;">// 每页条数</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;__itemcount&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;105&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 数据总条数</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;OUT&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;kx_store&quot;</span><span style="color:#24292E;">:[</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;storeid&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;storename&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">...</span><span style="color:#6A737D;">//5条记录</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;__paging&quot;</span><span style="color:#24292E;">:{    </span><span style="color:#6A737D;">// 有分页时，输出会增加一个内置对象__paging</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;__pageindex&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">,  </span><span style="color:#6A737D;">// 第1页</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;__pagesize&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;5&quot;</span><span style="color:#24292E;">,   </span><span style="color:#6A737D;">// 每页条数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;__itemcount&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;105&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 数据总条数</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><hr><p><strong>由于平台根据已有sql自动统计数据总条数，在某些场景中可能影响性能，用户可自定义统计条数的sql语句</strong></p><p><strong>例子</strong>: 查询门店信息，并分页，数据总条数设置</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 自定义统计条数的sql语句</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> cc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">c</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">kx_store</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> itemcount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cc[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].c;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// PAGING后加上数据总数变量，平台则会使用以上统计结果</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SELECT</span><span style="color:#E1E4E8;"> storeid, storename FROM kx_store PAGING(itemcount);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">OUT</span><span style="color:#E1E4E8;">.kx_store </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 自定义统计条数的sql语句</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> cc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">c</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">kx_store</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> itemcount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cc[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].c;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// PAGING后加上数据总数变量，平台则会使用以上统计结果</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SELECT</span><span style="color:#24292E;"> storeid, storename FROM kx_store PAGING(itemcount);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">OUT</span><span style="color:#24292E;">.kx_store </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>输出结果：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;OUT&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;kx_store&quot;</span><span style="color:#E1E4E8;">:[</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">&quot;storeid&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">&quot;storename&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">...</span><span style="color:#6A737D;">//5条记录</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;__paging&quot;</span><span style="color:#E1E4E8;">:{    </span><span style="color:#6A737D;">// 有分页时，输出会增加一个内置对象__paging</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;__pageindex&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">,  </span><span style="color:#6A737D;">// 第1页</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;__pagesize&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;5&quot;</span><span style="color:#E1E4E8;">,   </span><span style="color:#6A737D;">// 每页条数</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;__itemcount&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;105&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 数据总条数</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;OUT&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;kx_store&quot;</span><span style="color:#24292E;">:[</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;storeid&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;storename&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">...</span><span style="color:#6A737D;">//5条记录</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;__paging&quot;</span><span style="color:#24292E;">:{    </span><span style="color:#6A737D;">// 有分页时，输出会增加一个内置对象__paging</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;__pageindex&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">,  </span><span style="color:#6A737D;">// 第1页</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;__pagesize&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;5&quot;</span><span style="color:#24292E;">,   </span><span style="color:#6A737D;">// 每页条数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;__itemcount&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;105&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 数据总条数</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><hr><h2 id="_3-1-2-3-2-动态排序标记" tabindex="-1">3.1.2.3.2. 动态排序标记 <a class="header-anchor" href="#_3-1-2-3-2-动态排序标记" aria-label="Permalink to &quot;3.1.2.3.2. 动态排序标记&quot;">​</a></h2><ul><li>该标记会根据前端提供的动态排序信息，自动组装动态排序相关的sql语句。</li><li>该标记生成的排序与SQL语句中的 order by 互相叠加</li></ul><p>前端提供的动态排序信息，与入参对象平行一起传递:</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;kx_store&quot;</span><span style="color:#E1E4E8;">:{    </span><span style="color:#6A737D;">// 业务对象</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;storename&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;__sorting&quot;</span><span style="color:#E1E4E8;">:[   </span><span style="color:#6A737D;">// 前端提供的动态排序信息</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">&quot;key&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;排序的字段名&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;asc或desc&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;kx_store&quot;</span><span style="color:#24292E;">:{    </span><span style="color:#6A737D;">// 业务对象</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;storename&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;__sorting&quot;</span><span style="color:#24292E;">:[   </span><span style="color:#6A737D;">// 前端提供的动态排序信息</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;key&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;排序的字段名&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;asc或desc&quot;</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">...</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>API</strong></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 在flyQL语句结尾加上 sorting 或 SORTING的标记，则引擎会自动对结果进行排序</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SELECT</span><span style="color:#E1E4E8;"> xx </span><span style="color:#79B8FF;">FROM</span><span style="color:#E1E4E8;"> xxx sorting;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 在flyQL语句结尾加上 sorting 或 SORTING的标记，则引擎会自动对结果进行排序</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SELECT</span><span style="color:#24292E;"> xx </span><span style="color:#005CC5;">FROM</span><span style="color:#24292E;"> xxx sorting;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><p><strong>例</strong>: 查询门店信息，当用户在表格控件上点击storename的列头时，动态切换排序语句</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SELECT</span><span style="color:#E1E4E8;"> storeid, storename FROM kx_store order by storeid desc SORTING;</span></span>
<span class="line"><span style="color:#79B8FF;">OUT</span><span style="color:#E1E4E8;">.kx_store </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SELECT</span><span style="color:#24292E;"> storeid, storename FROM kx_store order by storeid desc SORTING;</span></span>
<span class="line"><span style="color:#005CC5;">OUT</span><span style="color:#24292E;">.kx_store </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 1. 默认返回的列表按照 storeid降序排列</span></span>
<span class="line"><span style="color:#6A737D;">-- 2. 当用户单击表格控件上的storename列头，切换为 storeid降序和storename升序排列，</span></span>
<span class="line"><span style="color:#6A737D;">-- flycode引擎遇到 SORTING标记 后，则会生成如下sql语句去执行</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> storeid, storename </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> kx_store </span><span style="color:#F97583;">order by</span><span style="color:#E1E4E8;"> storeid </span><span style="color:#F97583;">desc</span><span style="color:#E1E4E8;">, storename </span><span style="color:#F97583;">asc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 1. 默认返回的列表按照 storeid降序排列</span></span>
<span class="line"><span style="color:#6A737D;">-- 2. 当用户单击表格控件上的storename列头，切换为 storeid降序和storename升序排列，</span></span>
<span class="line"><span style="color:#6A737D;">-- flycode引擎遇到 SORTING标记 后，则会生成如下sql语句去执行</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> storeid, storename </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> kx_store </span><span style="color:#D73A49;">order by</span><span style="color:#24292E;"> storeid </span><span style="color:#D73A49;">desc</span><span style="color:#24292E;">, storename </span><span style="color:#D73A49;">asc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 当用户再次单击表格控件上的storename列头，切换为 storename降序排列</span></span>
<span class="line"><span style="color:#6A737D;">-- flycode引擎遇到 SORTING标记 后，则会生成如下sql语句去执行</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> storeid, storename </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> kx_store </span><span style="color:#F97583;">order by</span><span style="color:#E1E4E8;"> storeid </span><span style="color:#F97583;">desc</span><span style="color:#E1E4E8;">, storename </span><span style="color:#F97583;">desc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 当用户再次单击表格控件上的storename列头，切换为 storename降序排列</span></span>
<span class="line"><span style="color:#6A737D;">-- flycode引擎遇到 SORTING标记 后，则会生成如下sql语句去执行</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> storeid, storename </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> kx_store </span><span style="color:#D73A49;">order by</span><span style="color:#24292E;"> storeid </span><span style="color:#D73A49;">desc</span><span style="color:#24292E;">, storename </span><span style="color:#D73A49;">desc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>输出结果：</p><p>经过排序后的结果</p><p><em>提示：分页和排序标记仅仅是一个标记，可以同时使用，且不分前后顺序；如:句末加paging sorting同等于 sorting paging;</em></p><hr><h2 id="_3-1-2-3-3-数据权限标记" tabindex="-1">3.1.2.3.3. 数据权限标记 <a class="header-anchor" href="#_3-1-2-3-3-数据权限标记" aria-label="Permalink to &quot;3.1.2.3.3. 数据权限标记&quot;">​</a></h2><ul><li><p>该标记是控制数据权限的，会根据该标记动态拼装过滤SQL，达到权限控制的效果</p></li><li><p>数据权限标记置于SQL的最后（与分页、排序同等，不分先后顺序）</p></li><li><p>数据权限标记分4种情况：</p><ol><li><p>不使用权限标记，则该SQL默认所有相关业务实体都检查权限</p></li><li><p>标记“NORULE”，则该SQL的所有相关业务实体都不检查权限</p></li><li><p>标记白名单“RULE([&quot;A&quot;,&quot;B&quot;])”,则该SQL只对A和B业务主数据进行权限控制（注意：当使用白名单，字典实体默认存在白名单中）</p></li><li><p>标记黑名单“NORULE([&quot;A&quot;,&quot;B&quot;])”,则该SQL会忽略A和B业务主数据的权限控制</p></li></ol></li></ul><p><strong>例子</strong>：终端实体(kx_store)关联了营销区域(pl_salearea)，其中营销区域为主数据，登录的岗位绑定了只能看本营销区域的数据的权限规则</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">--1.原始SQL</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store NORULE; 等同于 </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store NORULE([&quot;pl_salearea&quot;]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">--转化后SQL</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">--2.原始SQL</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store; 等同于 </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store RULE([&quot;pl_salearea&quot;]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">--转化后SQL</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> kx_store.</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store kx_store</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">left join</span><span style="color:#E1E4E8;"> pl_salearea pl_salearea </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">kx_store</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">saleareaid</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pl_salearea</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">orgstructid</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pl_salearea</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">codepath</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123456789&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">--1.原始SQL</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store NORULE; 等同于 </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store NORULE([&quot;pl_salearea&quot;]);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">--转化后SQL</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">--2.原始SQL</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store; 等同于 </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store RULE([&quot;pl_salearea&quot;]);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">--转化后SQL</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> kx_store.</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store kx_store</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">left join</span><span style="color:#24292E;"> pl_salearea pl_salearea </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">kx_store</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">saleareaid</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pl_salearea</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">orgstructid</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pl_salearea</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">codepath</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;123456789&#39;</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_3-1-2-3-4-平台字段标记-noplat" tabindex="-1">3.1.2.3.4. 平台字段标记(NOPLAT) <a class="header-anchor" href="#_3-1-2-3-4-平台字段标记-noplat" aria-label="Permalink to &quot;3.1.2.3.4. 平台字段标记(NOPLAT)&quot;">​</a></h2><p>平台业务对象对应的数据库表, 总是包含几个平台内置的字段.</p><p>platcreatetime: 数据的创建时间</p><p>platupdatetime: 数据的更新时间</p><p>platcreateop: 数据创建的操作人的成员id</p><p>platupdateop: 数据创建的更新人的成员id</p><p>platstatus: 数据状态 1: 正常 2: 逻辑删除了</p><ul><li><p>NOPLAT 标记会忽略 platstatus 条件 ，一般使用在离线下载的逻辑上</p></li><li><p>不使用此标记时, 所有的查询默认不会将[逻辑删除]状态的数据查询出来.</p></li><li><p>NOPLAT标记写在SQL的最后（与分页、排序同等，不分先后顺序）</p></li></ul><p><strong>例子</strong></p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">--原始SQL</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store a</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">left join</span><span style="color:#E1E4E8;"> pl_salearea b </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">salesareaid</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;1111&#39;</span><span style="color:#E1E4E8;"> NOPLAT;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">--转换后的SQL</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store a</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">left join</span><span style="color:#E1E4E8;"> pl_salearea b </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">salesareaid</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;1111&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">--假如不加NOPLAT的转化SQL：</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> kx_store a</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">left join</span><span style="color:#E1E4E8;"> pl_salearea b </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">salesareaid</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">platstatus</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;1111&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">platstatus</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">--原始SQL</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store a</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">left join</span><span style="color:#24292E;"> pl_salearea b </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">salesareaid</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">b</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">id</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">id</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1111&#39;</span><span style="color:#24292E;"> NOPLAT;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">--转换后的SQL</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store a</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">left join</span><span style="color:#24292E;"> pl_salearea b </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">salesareaid</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">b</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">id</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">id</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1111&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">--假如不加NOPLAT的转化SQL：</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> kx_store a</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">left join</span><span style="color:#24292E;"> pl_salearea b </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">salesareaid</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">b</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">id</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">b</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">platstatus</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">id</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1111&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">platstatus</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,46),e=[o];function t(r,c,E,y,i,u){return n(),a("div",null,e)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
