import{_ as s,o as a,c as n,R as e}from"./chunks/framework.S1SDgkSw.js";const h=JSON.parse('{"title":"小程序码设计","description":"","frontmatter":{"title":"小程序码设计","date":"2021-07-29T15:31:38.000Z"},"headers":[],"relativePath":"doc/wpdoc/小程序码设计.md","filePath":"doc/wpdoc/小程序码设计.md"}'),p={name:"doc/wpdoc/小程序码设计.md"},t=e(`<h1 id="小程序码设计及微服务部署文档" tabindex="-1">小程序码设计及微服务部署文档 <a class="header-anchor" href="#小程序码设计及微服务部署文档" aria-label="Permalink to &quot;小程序码设计及微服务部署文档&quot;">​</a></h1><h2 id="一、小程序码设计文档" tabindex="-1">一、小程序码设计文档 <a class="header-anchor" href="#一、小程序码设计文档" aria-label="Permalink to &quot;一、小程序码设计文档&quot;">​</a></h2><h3 id="_1、设计背景" tabindex="-1">1、设计背景 <a class="header-anchor" href="#_1、设计背景" aria-label="Permalink to &quot;1、设计背景&quot;">​</a></h3><p>在项目实施过程中，客户有时需要将H5页面植入小程序码，并通过扫描小程序码跳转。而获取小程序码需要access_token，access_token每天只能获取2000次，每个access_token的有效期为2小时。除此之外，调用微信小程序的其他接口，也需要access_token，如果用户量很大，那么access_token很容易超过每天2000次的上限，导致不能再获取小程序码。</p><h3 id="_2、现有问题痛点" tabindex="-1">2、现有问题痛点 <a class="header-anchor" href="#_2、现有问题痛点" aria-label="Permalink to &quot;2、现有问题痛点&quot;">​</a></h3><p>微信小程序的access_token每天只能免费获取2000次，超过上限将导致无法获取小程序码或无法调用微信小程序其他接口</p><h3 id="_3、解决方案" tabindex="-1">3、解决方案 <a class="header-anchor" href="#_3、解决方案" aria-label="Permalink to &quot;3、解决方案&quot;">​</a></h3><p>微信小程序官方文档提供了获取access_token的接口，access_token有效期为2小时，如果将获取的access_token存入到缓存，并每个小时刷新一次，既能保证access_token不失效，也能保证每天不会超过2000次的上限。所以将获取access_token和缓存access_token的方法封装成微服务，并对外提供获取access_token的接口即可。具体实现步骤如下：</p><p><strong>1.准备工作</strong></p><p>获取access_token，需要微信小程序的appid和secret，appid和secret可以唯一确认一个小程序。</p><p>appid：小程序唯一凭证，即 AppID，可在「微信公众平台 - 设置 - 开发设置」页中获得。</p><p>secret：小程序唯一凭证密钥，即 AppSecret，获取方式同 appid。</p><p><strong>2.获取 access_token</strong></p><p>调用微信小程序官方提供的接口获取access_token，接口路径如下：</p><p>get <a href="https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET" target="_blank" rel="noreferrer">https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET</a></p><p>请求参数说明：</p><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">grant_type</td><td style="text-align:center;">String</td><td style="text-align:center;">是</td><td style="text-align:left;">固定值，填写 client_credential</td></tr><tr><td style="text-align:center;">appid</td><td style="text-align:center;">String</td><td style="text-align:center;">是</td><td style="text-align:left;">前文准备的appid</td></tr><tr><td style="text-align:center;">secret</td><td style="text-align:center;">String</td><td style="text-align:center;">是</td><td style="text-align:left;">前文准备的secret</td></tr></tbody></table><p>返回值说明：</p><p><strong>3. 缓存 access_token</strong></p><p>在微服务后台使用一个全局静态变量缓存access_token，并每个小时更新一次，保证access_token的有效性。</p><p><strong>4. 对外提供获取 access_token 接口</strong></p><p>在微服务中对外提供获取access_token的接口，接口路径如下：</p><p>get http(s)😕/ip:port/api/extend/get/wx/token</p><p>其中ip为部署微服务的服务器IP，port为访问端口。</p><p>获取成功返回值：</p><p>​ {</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    &quot;token&quot;: xxx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>​ }</p><p>​ 获取失败返回值：</p><p>​ {</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    &quot;err_msg&quot;: &quot;获取微信token失败&quot;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&quot;err_code&quot;: -1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>​ }</p><p><strong>5.获取微信小程序码</strong></p><p>调用微信小程序官方提供的接口获取access_token，接口路径如下：</p><p>POST <a href="https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=ACCESS_TOKEN" target="_blank" rel="noreferrer">https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=ACCESS_TOKEN</a></p><p>请求参数说明：</p><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">类型</th><th style="text-align:center;">必填</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;">access_token</td><td style="text-align:center;">String</td><td style="text-align:center;">是</td><td>前文获取的access_token</td></tr><tr><td style="text-align:center;">scene</td><td style="text-align:center;">String</td><td style="text-align:center;">是</td><td>扫码后传到跳转页面的参数，最大32个可见字符</td></tr><tr><td style="text-align:center;">page</td><td style="text-align:center;">String</td><td style="text-align:center;">否</td><td>扫码后跳转的页面，必须是已经发布的小程序存在的页面，默认主页</td></tr></tbody></table><p><strong>6. 对外提供获取微信小程序码接口</strong></p><p>在微服务中对外提供获取微信小程序码的接口，接口路径如下：</p><p>post http(s)😕/ip:port/api/extend/get/wx/unlimited</p><p>其中ip为部署微服务的服务器IP，port为访问端口。</p><p>请求参数说明：</p><p>​ {</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>    &quot;scene&quot; : xxx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>​ }</p><h3 id="_4、服务优化" tabindex="-1">4、服务优化 <a class="header-anchor" href="#_4、服务优化" aria-label="Permalink to &quot;4、服务优化&quot;">​</a></h3><p>​ 为解决微服务的通用性和便捷性，特引入了Nacos作为服务配置中心，appid、secret、和小程序扫码后跳转的page，都可以在Nacos中配置和修改，且修改后无需重新启动微服务就能立即生效。</p><h2 id="二、小程序码微服务部署文档" tabindex="-1">二、小程序码微服务部署文档 <a class="header-anchor" href="#二、小程序码微服务部署文档" aria-label="Permalink to &quot;二、小程序码微服务部署文档&quot;">​</a></h2><h3 id="_1、上传微服务应用" tabindex="-1">1、上传微服务应用 <a class="header-anchor" href="#_1、上传微服务应用" aria-label="Permalink to &quot;1、上传微服务应用&quot;">​</a></h3><p>将【COM-BC020-FC001 小程序码 &gt; Step-4：微服务配置 &gt; 3-程序部署包】目录下的apaas-extend-server.zip包上传到Linux服务器并解压，解压命令如下：</p><p>​ <strong>unzip apaas-extend-server.zip</strong></p><p>解压后目录结构如下，目录及文件说明见表1：</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.1.png" alt="img"></p><p>表1：目录及文件说明</p><table><thead><tr><th><em><strong>*名称*</strong></em></th><th><em><strong>*类型*</strong></em></th><th><em><strong>*说明*</strong></em></th></tr></thead><tbody><tr><td><em><strong>*apaas-extend-server*</strong></em></td><td>文件夹</td><td>apaas-extend-server.zip解压后得到的文件夹，其中包含应用程序包、配置文件和启动日志目录</td></tr><tr><td><em><strong>*apaas-extend-server.jar*</strong></em></td><td>文件</td><td>应用程序包，封装了获取小程序token和小程序码的微服务</td></tr><tr><td><em><strong>*deploy.sh*</strong></em></td><td>文件</td><td>执行脚本，sh deploy.sh [start | stop | restart]</td></tr><tr><td><em><strong>*config*</strong></em></td><td>文件夹</td><td>微服务配置文件夹，包含应用程序配置文件和Nacos信息配置文件</td></tr><tr><td><em><strong>*application. properties*</strong></em></td><td>文件</td><td>应用程序配置文件，如果配置了与Nacos配置中心相同的配置项，已Nacos配置中心为准</td></tr><tr><td><em><strong>*bootstrap.properties*</strong></em></td><td>文件</td><td>Nacos信息配置文件</td></tr></tbody></table><h3 id="_2-、配置微服务参数" tabindex="-1">2 、配置微服务参数 <a class="header-anchor" href="#_2-、配置微服务参数" aria-label="Permalink to &quot;2 、配置微服务参数&quot;">​</a></h3><p>配置微服务有两种方式，其一，在application. properties配置文件中配置；其二，在Nacos配置中心配置。如果有Nacos配置中心，强烈建议在Nacos配置中心配置，因为在Nacos配置中心配置的参数，修改时无需重启服务，而在application. properties配置文件中配置的参数，每次修改时都需要重启服务。</p><p><strong>1) 在application. properties配置中心</strong></p><p>进入apaas-extend-server/config目录下，在application. properties中添加下列配置即可：</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.2.png" alt="img"></p><p>配置说明：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>​   server.port=8088   // 微服务启动端口，不配置默认8088</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​   token.wx.appId=xxx // 微信小程序appid</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​   token.wx.secret=xxx // 微信小程序secret</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​   token.wx.page=xxx  // 微信小程序码扫码后跳转页面，不配置默认小程序主页</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>2) 在Nacos配置中心</strong></p><p>a) 登录Nacos</p><p>登录地址：http(s)😕/ip:port/nacos/#/login</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.3.png" alt="img"></p><p>b) 新增Nacos配置</p><p>登录后，点击页面右上角的加号，进入新增页面，新增Nacos配置并发布即可。</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.4.png" alt="img"></p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.5.png" alt="img"></p><p>​ 配置参数说明：</p><table><thead><tr><th><em>配置项</em></th><th><em>配置值</em></th><th><em>说明</em></th></tr></thead><tbody><tr><td>*Da*<em>ta ID</em></td><td>apaas-extend-server</td><td>Nacos配置唯一标识，不能重复，必须与bootstrap.properties配置文件中spring.cloud.nacos.config.prefix的值相同</td></tr><tr><td><em>Group</em></td><td>com.xuanwu.extend</td><td>Nacos配置分组，可重复必须与bootstrap.properties配置文件中spring.cloud.nacos.config.group的值相同</td></tr><tr><td><em>配置格式</em></td><td>Properties</td><td>选择Properties</td></tr></tbody></table><p>注：如果不是特殊情况，Data ID、Group和配置格式按上表配置值配置，切勿修改。如需修改，请同步修改</p><p>配置内容说明：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>server.port=8088   // 微服务启动端口，不配置默认8088</span></span>
<span class="line"><span></span></span>
<span class="line"><span>token.wx.appId=xxx // 微信小程序appid</span></span>
<span class="line"><span></span></span>
<span class="line"><span>token.wx.secret=xxx // 微信小程序secret</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​     token.wx.page=xxx  // 必须是已经发布的小程序存在的页面（否则报错），例如 pages/index/index, 根路径前不要填加 /,不能携带参数（参数请放在scene字段里），如果不填写这个字段，默认跳主页面</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>c) 配置bootstrap.properties文件</p><p>​ 进入apaas-extend-server/config目录下，在bootstrap. properties中添加下列配置即可：</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.6.png" alt="img"></p><p>​ 配置参数说明：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>spring.application.name=apaas-extend-server     // 服务名称，建议不修改</span></span>
<span class="line"><span></span></span>
<span class="line"><span>spring.cloud.nacos.config.server-addr=127.0.0.1:8848  // Nacos服务器地址，根据实际情况修改</span></span>
<span class="line"><span></span></span>
<span class="line"><span>spring.cloud.nacos.config.group=com.xuanwu.extend  // Nacos配置的分组，必须与Nacos配置中的Group的值一致，建议不修改</span></span>
<span class="line"><span></span></span>
<span class="line"><span>spring.cloud.nacos.config.prefix=apaas-extend-server  // Nacos配置的前缀，必须与Nacos配置中的Data ID的值一致，建议不修改</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>配置加载顺序说明：</strong></p><p>如果在application.properties和Nacos中都配置了相同的参数，会默认加载Nacos中的参数，例如在application.properties配置了server.port=8080，在Nacos中配置了server.port=8088，那么微服务启动端口将会是8088而非8080。</p><h3 id="_3、-启动微服务" tabindex="-1">3、 启动微服务 <a class="header-anchor" href="#_3、-启动微服务" aria-label="Permalink to &quot;3、 启动微服务&quot;">​</a></h3><p>​ 进入apaas-extend-server目录，执行如下命令启动：</p><p>​ <strong>sh</strong> <strong>deploy.sh start</strong></p><p>​ 进入apaas-extend-server/logs目录查看apaas-extend-server.log日志，如果出现下图所示日志则启动成功：</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.7.png" alt="img"></p><h3 id="_4、配置nginx服务代理" tabindex="-1">4、配置Nginx服务代理 <a class="header-anchor" href="#_4、配置nginx服务代理" aria-label="Permalink to &quot;4、配置Nginx服务代理&quot;">​</a></h3><p>​ 通常情况下，Linux服务器都有开启防火墙，并对外网暴露一个端口（我们公司一般是7000），所以要使外网能够访问微服务接口，就必须用Nginx做方向代理。配置反向代理步骤如下：</p><p><strong>1) 添加代理配置</strong></p><p>进入nginx配置目录（一般是/usr/local/openresty/nginx/conf）</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>​   **cd** **/usr/local/openresty/nginx/conf**</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>修改nginx.conf配置文件</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>​   **vi** **nginx****.conf**</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在7000这个监听端口下添加（如果对外保暴露端口不是7000，在对应的暴露端口下添加）下面这段配置：</p><p>location ~^/api/extend/ {</p><p>proxy_pass <a href="http://127.0.0.1:8088" target="_blank" rel="noreferrer">http://127.0.0.1:8088</a>;</p><p>rewrite ^/api/extend/(.+) /api/extend/$1 break;</p><p>}</p><p>说明：</p><p>​ proxy_pass <a href="http://ip:port%EF%BC%9A%E4%BB%A3%E7%90%86%E5%9C%B0%E5%9D%80%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B7%9FNginx%E6%98%AF%E5%90%8C%E4%B8%80%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8Cip%E5%A1%AB%E5%86%99127.0.0.1%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B8%8D%E4%B8%BA%E5%90%8C%E4%B8%80%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E5%A1%AB%E5%86%99%E6%9C%8D%E5%8A%A1%E5%99%A8ip%EF%BC%88%E5%89%8D%E6%8F%90%E6%98%AF%E4%B8%A4%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E9%97%B4%E7%BD%91%E7%BB%9C%E4%BA%92%E9%80%9A%EF%BC%89%EF%BC%9Bport%E4%B8%BA%E5%89%8D%E6%96%87%E9%85%8D%E7%BD%AE%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E7%AB%AF%E5%8F%A3%EF%BC%8C%E5%A6%82%E6%9C%AA%E9%85%8D%E7%BD%AE%E9%BB%98%E8%AE%A48088" target="_blank" rel="noreferrer">http://ip:port：代理地址，如果微服务跟Nginx是同一台服务器，ip填写127.0.0.1，如果不为同一台服务器，填写服务器ip（前提是两台服务器之间网络互通）；port为前文配置的微服务启动端口，如未配置默认8088</a>。</p><p>rewrite：不用修改，复制即可。</p><p>注：注意配置添加的位置，参考下图。</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.8.png" alt="img"></p><p><strong>2) 重启Nginx服务</strong></p><p>修改nginx.conf后需要重启Nginx。</p><p>进入nginx配置目录（一般是/usr/local/openresty/nginx/sbin）</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>​   **cd** **/usr/local/openresty/nginx/sbin**</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>重启Nginx服务，命令如下：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>​   ./**nginx** **-s reload**</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_5、-验证部署结果" tabindex="-1">5、 验证部署结果 <a class="header-anchor" href="#_5、-验证部署结果" aria-label="Permalink to &quot;5、 验证部署结果&quot;">​</a></h3><p><strong>1) 验证获取微信小程序token接口</strong></p><p>​ 在浏览器中输入http(s)😕/ip:port/api/extend/get/wx/token，如果返回如下信息则部署成功：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>{&quot;token&quot;:&quot;47_CNlUDzOVA2ghT4bRYXIiFKSCky1MG8-enHv-mPk85YgYwYnXv3BgsWwxlxn3NrOzCdyvxe34WW8EStFW3zHSzTn87teCbdIJjcSiIV3Fl9OEGvke1DKRnFMFRoRBlvrFeKt0jyMG4oi3zmSZQEEfAEAWKK&quot;}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.9.png" alt="img"></p><p><strong>2) 验证获取微信小程序码接口</strong></p><p>在postman中以post方式请求http(s)😕/ip:port/api/extend/get/wx/unlimited，请求参数如下：</p><p>​ {</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>        &quot;scene&quot; : &quot;xxx&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>​ }</p><p>其中xxx内容随意。</p><p>获取微信小程序码成功返回如下图：</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.10.png" alt="img"></p><p>获取微信小程序码成功返回如下图：</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E9%83%A8%E7%BD%B2.11.png" alt="img"></p><p>如果获取失败，请检查配置的token.wx.page是否必须是已经发布的小程序存在的页面或token.wx.page参数前是否加了斜杠（/）</p><h3 id="_6、使用方式" tabindex="-1">6、使用方式 <a class="header-anchor" href="#_6、使用方式" aria-label="Permalink to &quot;6、使用方式&quot;">​</a></h3><p>​ 该接口主要用于H5获取小程序码，以及在H5端调用小程序接口时获取认证token。</p><p><strong>1) 获取小程序码</strong></p><p>在H5中添加一个image标签，并将src设定为一个变量：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt; image class = &quot;Q2Dcode&quot; src=&quot;{{imageData}}&quot; mode=&quot;aspectFit&quot;&gt; &lt;/ image&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>在js中通过wx的api获取小程序码并赋值给image标签的src变量：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>wx.request({  </span></span>
<span class="line"><span></span></span>
<span class="line"><span>   url: &#39;https://xxx/api/extend/get/wx/unlimited&#39;, // 请求获取二维码的接口URL</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   data: {&quot;scene&quot; : xxx}, //携带到跳转页面的参数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​        method:&#39;POST&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   header: {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​    &#39;Content-type&#39;: &#39;application/json; charset=utf-8&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   responseType: &#39;application/json&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   success(res) {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​    const imageBase64 = &#39;data:image/png;base64,&#39;+res.data.buffer</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​    that.setData({</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​     imageData : imageBase64  //将获取的值设置到image标签定义的变量中</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​    })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><strong>2) 获取微信小程序token</strong></p><p>直接通过http请求或https请求访问获取token的接口并解析返回值即可，接口URL如下：</p><p>​ http(s)😕/ip:port/api/extend/get/wx/token</p><p>返回值（JSON格式）：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>​   {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​     &quot;token&quot;:&quot;47_CNlUDzOVA2ghT4bRYXIiFKSCky1MG8-enHv-          mPk85YgYwYnXv3BgsWwxlxn3NrOzCdyvxe34WW8EStFW3zHSzTn87teCbdIJjcSiIV  3Fl9OEGvke1DKRnFMFRoRBlvrFeKt0jyMG4oi3zmSZQEEfAEAWKK&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​   }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="组件包下载" tabindex="-1">组件包下载 <a class="header-anchor" href="#组件包下载" aria-label="Permalink to &quot;组件包下载&quot;">​</a></h3><p><a href="http://apaas.wxchina.com:8881/wp-content/uploads/COM-BC020-FC001-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%A0%811.zip" title="COM-BC020-FC001 小程序码(1)" target="_blank" rel="noreferrer">COM-BC020-FC001 小程序码(1)</a></p><p>视频讲解：<a href="http://apaas.wxchina.com:8881/wp-content/uploads/%E8%92%B2%E5%BC%80%E5%B0%81%E3%80%8A%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%A0%81%E3%80%8B.wmv" title="蒲开封《小程序码》" target="_blank" rel="noreferrer">《小程序码》</a></p>`,139),i=[t];function r(l,c,o,d,g,b){return a(),n("div",null,i)}const m=s(p,[["render",r]]);export{h as __pageData,m as default};
