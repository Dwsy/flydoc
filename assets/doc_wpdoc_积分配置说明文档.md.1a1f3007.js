import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.b1e56e49.js";const b=JSON.parse('{"title":"积分配置说明文档","description":"","frontmatter":{"title":"积分配置说明文档","date":"2023-05-08T15:22:42.000Z"},"headers":[],"relativePath":"doc/wpdoc/积分配置说明文档.md","filePath":"doc/wpdoc/积分配置说明文档.md"}'),l={name:"doc/wpdoc/积分配置说明文档.md"},o=p(`<h1 id="积分配置说明文档" tabindex="-1">积分配置说明文档 <a class="header-anchor" href="#积分配置说明文档" aria-label="Permalink to &quot;积分配置说明文档&quot;">​</a></h1><ul><li><p>编辑：林志权</p></li><li><p>时间：2023-04-30</p></li><li><p>状态：已完成</p></li><li><p>适用范围：智慧100V6.2</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">本文档包括如下内容</span></span>
<span class="line"><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> 积分指标配置</span></span>
<span class="line"><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> 积分规则</span></span>
<span class="line"><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> 积分方案设置</span></span>
<span class="line"><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> 程序中做扩展接入</span></span>
<span class="line"><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> 积分SPU智慧插件使用</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">本文档包括如下内容</span></span>
<span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> 积分指标配置</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> 积分规则</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> 积分方案设置</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> 程序中做扩展接入</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> 积分SPU智慧插件使用</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><p>具体业务分析可以查看（<a href="http://apaas.wxchina.com:8881/technology/504/" target="_blank" rel="noreferrer">积分体系配置说明</a>）这篇文档，V6.2积分兼容旧版，只是配置指标方式有所区别。</p><h2 id="一、积分指标配置" tabindex="-1">一、积分指标配置 <a class="header-anchor" href="#一、积分指标配置" aria-label="Permalink to &quot;一、积分指标配置&quot;">​</a></h2><p>该步骤在产品配置中心中操作.</p><h3 id="_1-1-相关说明" tabindex="-1">1.1 相关说明 <a class="header-anchor" href="#_1-1-相关说明" aria-label="Permalink to &quot;1.1 相关说明&quot;">​</a></h3><p>(1) 指标名称可以和对象表名不一致，可以自定义名称(但需使用英文，可以加下划线)。<br> (2) 单次积分没有异步运算方法(存储函数),累计/异步有异步运算方法。</p><p>异步运算方法原理，如一些业务行为是延迟性的，如拜访超过5次才能积分，这样子就可以写一段存储函数逻辑将拜访超过5次的业务数据抽取到一张中间表中（每天自动抽取或更新拜访超过5次的数据到中间表中）。</p><p>该函数为di调度服务，调用该function 汇聚数据使用。eg:汇总用户每日拜访次数，每日订单金额总数。function 必须是实际已经存在的。<br> (3) 修改指标信息之后，需要发布该指标，否则信息不会被修改.</p><h3 id="_1-2-具体配置" tabindex="-1">1.2 具体配置 <a class="header-anchor" href="#_1-2-具体配置" aria-label="Permalink to &quot;1.2 具体配置&quot;">​</a></h3><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230504183753210.png" alt=""></p><p>对象表名取代的是旧版积分（V6.2之前）的积分实体，这里选定的为实际的数据库表。</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230504181249464.png" alt=""></p><p>指标定义这里有四个指标项，接下来将逐个说明：</p><h4 id="_1-2-1-可供计算属性" tabindex="-1">1.2.1 可供计算属性 <a class="header-anchor" href="#_1-2-1-可供计算属性" aria-label="Permalink to &quot;1.2.1 可供计算属性&quot;">​</a></h4><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230505151346432.png" alt=""></p><p>这里假设做活动执行有一个评分，至少大于1，这个属性用于计算用，后面创建积分规则会说到</p><h4 id="_1-2-2-触发条件属性" tabindex="-1">1.2.2 触发条件属性 <a class="header-anchor" href="#_1-2-2-触发条件属性" aria-label="Permalink to &quot;1.2.2 触发条件属性&quot;">​</a></h4><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230504184049012.png" alt=""></p><p>此处触发结果配置类型为选择下拉类型，可以配置选择项，例如，实际活动执行合格之后，执行记录字段execstatus对应为1，不合格为0，这里这样子配置：</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230504184314253.png" alt=""></p><p>这样用户在前端能够看到的就是执行合格和执行不合格，而非0或1这种开发人员才懂的数据。</p><p>ps:如果选择数据源，需要先写好一个flycode接口，并且接口出参格式符合以下要求：<br> 1、自定义实体：<br> 实体名为data,两个字段，分别为key和text<br> 2、自定义数组：<br> 数组名为data，数组内每个实体携带两个字段，分别为key和text<br> 出参举例：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;resp_data&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;data&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">&quot;key&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1375261103247986688&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">&quot;text&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;果汁饮料&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">&quot;key&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1570991219620843520&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">&quot;text&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;茶饮料&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;resp_data&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;data&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">&quot;key&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1375261103247986688&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">&quot;text&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;果汁饮料&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">&quot;key&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1570991219620843520&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">&quot;text&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;茶饮料&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="_1-2-3-赋值目标属性" tabindex="-1">1.2.3 赋值目标属性 <a class="header-anchor" href="#_1-2-3-赋值目标属性" aria-label="Permalink to &quot;1.2.3 赋值目标属性&quot;">​</a></h4><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230504184746694.png" alt=""></p><p>赋值目标即为最后这个指标可以积分给谁，需要注意的是，<strong>如果积分数据中需要同时含有成员和客户数据的，并且业务数据都有对应字段，这里应当都配置上对应的字段</strong>，如下面积分流水存在关联客户，则该指标需要同时配置客户和成员两个赋值目标</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230504185201541.png" alt=""></p><h4 id="_1-2-4-限定规则" tabindex="-1">1.2.4 限定规则 <a class="header-anchor" href="#_1-2-4-限定规则" aria-label="Permalink to &quot;1.2.4 限定规则&quot;">​</a></h4><p>@sinceV6.1 用于自定义限定条件的处理</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230505153100118.png" alt=""></p><p>这里的限制函数作用是限制当月对同一家店只能加一次分，最多可以积累x分，其中这个x在后面生成规则时会有真正填入实际数据，限定规则的示例在后面。</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">f_integral_example</span><span style="color:#E1E4E8;">(keyvalue </span><span style="color:#F97583;">numeric</span><span style="color:#E1E4E8;">, storeid </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">, userid </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">, ruleid </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">returns</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">character</span><span style="color:#E1E4E8;"> varying</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">language</span><span style="color:#E1E4E8;"> plpgsql</span></span>
<span class="line"><span style="color:#F97583;">as</span></span>
<span class="line"><span style="color:#E1E4E8;">$$</span></span>
<span class="line"><span style="color:#F97583;">DECLARE</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">times</span><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">numeric</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    score    </span><span style="color:#F97583;">numeric</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ruleid1  </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;"> :</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ruleid;</span></span>
<span class="line"><span style="color:#E1E4E8;">    storeid1 </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;"> :</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> storeid;</span></span>
<span class="line"><span style="color:#F97583;">BEGIN</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">-- 举例,限制逻辑:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">-- 限制执行人员，在当月内，对于一家店只能积分一次，并且执行人员对于这个积分规则每月积分不大于keyvalue分</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">COALESCE</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)::</span><span style="color:#F97583;">numeric</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">AS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">times</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">COALESCE</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">sum</span><span style="color:#E1E4E8;">(integralvalue), </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)::</span><span style="color:#F97583;">numeric</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">AS</span><span style="color:#E1E4E8;"> score</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> integral_flowinfo_member</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> memberid </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userid</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> customerid </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> storeid1</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> createtime </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> date_trunc(</span><span style="color:#9ECBFF;">&#39;month&#39;</span><span style="color:#E1E4E8;">, CURRENT_DATE)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> createtime </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> date_trunc(</span><span style="color:#9ECBFF;">&#39;month&#39;</span><span style="color:#E1E4E8;">, CURRENT_DATE </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> INTERVAL </span><span style="color:#9ECBFF;">&#39;1 month - 1 day&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">integral_flowinfo_member</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">ruleid</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ruleid1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">times</span><span style="color:#E1E4E8;">, score;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    raise notice </span><span style="color:#9ECBFF;">&#39;积分次数: %,当月积分总数: %&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">times</span><span style="color:#E1E4E8;">,score;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">-- 注意这里的积分次数固定为1,实际可以根据传入的参数决定,只是此处演示限制最大分值是动态的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">times</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">OR</span><span style="color:#E1E4E8;"> score </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> keyvalue::</span><span style="color:#F97583;">numeric</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">THEN</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">-- 当月对同一家店积分超过1次，或者当月累计积分值已经达到keyvalue限制，本次不再积分</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">RETURN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;frequency&quot;: 0}&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">ELSE</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">-- 当月对这家店还没有进行过积分，本次可以积分</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">RETURN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;frequency&quot;: 1, &quot;integralvalue&quot;: &#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> (keyvalue::</span><span style="color:#F97583;">numeric</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> score) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;}&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">END</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">END</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">$$;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">alter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> f_integral_example(</span><span style="color:#F97583;">numeric</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">owner</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">to</span><span style="color:#E1E4E8;"> postgres;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f_integral_example</span><span style="color:#24292E;">(keyvalue </span><span style="color:#D73A49;">numeric</span><span style="color:#24292E;">, storeid </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">, userid </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">, ruleid </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">returns</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">character</span><span style="color:#24292E;"> varying</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">language</span><span style="color:#24292E;"> plpgsql</span></span>
<span class="line"><span style="color:#D73A49;">as</span></span>
<span class="line"><span style="color:#24292E;">$$</span></span>
<span class="line"><span style="color:#D73A49;">DECLARE</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">times</span><span style="color:#24292E;">    </span><span style="color:#D73A49;">numeric</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    score    </span><span style="color:#D73A49;">numeric</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    ruleid1  </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;"> :</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ruleid;</span></span>
<span class="line"><span style="color:#24292E;">    storeid1 </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;"> :</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> storeid;</span></span>
<span class="line"><span style="color:#D73A49;">BEGIN</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">-- 举例,限制逻辑:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">-- 限制执行人员，在当月内，对于一家店只能积分一次，并且执行人员对于这个积分规则每月积分不大于keyvalue分</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">COALESCE</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">count</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)::</span><span style="color:#D73A49;">numeric</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">AS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">times</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">COALESCE</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(integralvalue), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)::</span><span style="color:#D73A49;">numeric</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">AS</span><span style="color:#24292E;"> score</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> integral_flowinfo_member</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> memberid </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userid</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> customerid </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> storeid1</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> createtime </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> date_trunc(</span><span style="color:#032F62;">&#39;month&#39;</span><span style="color:#24292E;">, CURRENT_DATE)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> createtime </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> date_trunc(</span><span style="color:#032F62;">&#39;month&#39;</span><span style="color:#24292E;">, CURRENT_DATE </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> INTERVAL </span><span style="color:#032F62;">&#39;1 month - 1 day&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">integral_flowinfo_member</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">ruleid</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ruleid1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">INTO</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">times</span><span style="color:#24292E;">, score;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    raise notice </span><span style="color:#032F62;">&#39;积分次数: %,当月积分总数: %&#39;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">times</span><span style="color:#24292E;">,score;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">-- 注意这里的积分次数固定为1,实际可以根据传入的参数决定,只是此处演示限制最大分值是动态的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">times</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">OR</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> keyvalue::</span><span style="color:#D73A49;">numeric</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">THEN</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">-- 当月对同一家店积分超过1次，或者当月累计积分值已经达到keyvalue限制，本次不再积分</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">RETURN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;frequency&quot;: 0}&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">ELSE</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">-- 当月对这家店还没有进行过积分，本次可以积分</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">RETURN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;frequency&quot;: 1, &quot;integralvalue&quot;: &#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> (keyvalue::</span><span style="color:#D73A49;">numeric</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> score) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;}&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">END</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">END</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">$$;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">alter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> f_integral_example(</span><span style="color:#D73A49;">numeric</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">owner</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">to</span><span style="color:#24292E;"> postgres;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>出参举例：</p><p>{&quot;frequency&quot;: 0} 代表本次不再积分，用于不满足积分条件时</p><p>{&quot;frequency&quot;: 1} 代表本次可以积分，并且不限制最大积分</p><p>{&quot;frequency&quot;: 1,&quot;integralvalue&quot;:10} 代表本次可以积分，并且限制最多可以积10分（注意，当integralvalue小于 0 的时候，也会认为本次不再积分，即限制函数计算出来的可积分值必须大于 0 才会进行后续积分处理）</p><h2 id="二、-积分规则-积分方案设置" tabindex="-1">二、 积分规则，积分方案设置 <a class="header-anchor" href="#二、-积分规则-积分方案设置" aria-label="Permalink to &quot;二、 积分规则，积分方案设置&quot;">​</a></h2><p>以单次积分规则配置为例，使用刚刚创建的积分指标</p><h3 id="_2-1-积分规则配置" tabindex="-1">2.1 积分规则配置 <a class="header-anchor" href="#_2-1-积分规则配置" aria-label="Permalink to &quot;2.1 积分规则配置&quot;">​</a></h3><h4 id="_2-1-1-规则基本信息" tabindex="-1">2.1.1 规则基本信息 <a class="header-anchor" href="#_2-1-1-规则基本信息" aria-label="Permalink to &quot;2.1.1 规则基本信息&quot;">​</a></h4><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230505152024383.png" alt=""></p><p>此处配置并不复杂，红框处就是积分指标配置设置的触发条件属性，后台设置了对应值，这里执行合格对应的其实就是刚刚设置的1</p><h4 id="_2-1-2-积分规则内容" tabindex="-1">2.1.2 积分规则内容 <a class="header-anchor" href="#_2-1-2-积分规则内容" aria-label="Permalink to &quot;2.1.2 积分规则内容&quot;">​</a></h4><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230505152344571.png" alt=""></p><p>积分规则处进行配置可以使用if函数，用于灵活判断，类似三目运算，IF(条件，条件为真时获得的积分，条件为假时获得积分)</p><p>例如IF(a&gt;10,10,1)代表如果a大于10，获得10分，否则获得1分</p><p>2.1.3 规则限定</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230505153141937.png" alt=""></p><p>规则限定会默认四个限定规则，第5个限定规则是积分指标规定的自定义限定规则，这里传入50，则这个积分规则的自定义限定规则意义为：当月对同一家店只能加一次分，且当月最多可以积累50分（对不同的门店）</p><p>需要注意：一个积分指标可以配置多个限定规则，但考虑到并非所有积分规则的都需要用到所有限定规则，因此，此处如果限定数值没有填入数值，限制将不生效（和上面每次、每日等上限规则同理）</p><h2 id="三、积分方案设置" tabindex="-1">三、积分方案设置 <a class="header-anchor" href="#三、积分方案设置" aria-label="Permalink to &quot;三、积分方案设置&quot;">​</a></h2><h3 id="_3-1-积分方案" tabindex="-1">3.1 积分方案 <a class="header-anchor" href="#_3-1-积分方案" aria-label="Permalink to &quot;3.1 积分方案&quot;">​</a></h3><p>积分方案依赖于积分规则，积分方案不存在单次，累计的说法，可以选择多个积分规则，但是请特别注意:<br> (1) 同一个方案同一个积分指标的积分规则不能有多个。比如 规则A ，规则B 都依赖积分指标A1 ,这2个指标不能多选。<br> (2) 二个相同营销组织(适用范围)的有效方案，也不允许(1) 的出现。</p><p>(3) 积分方案适用范围可以是:厂家,经销商营销组织(支持多选),应用维度可以是组织+职位(支持多选)，也可以是组织+人员(支持多选)。<br> (4) 厂家,经销商营销组织至少填写一项。<br> (5) 匹配积分方案计算积分时,大组织+职位</p><p>(6) 积分方案存在如下状态.草稿-待生效-进行中-已结束。状态变化过程如下:<br> 新建方案-草稿。发布方案，待生效。到了方案开始时间-进行中。方案结束-已结束。<br> (7)方案生效状态。默认为有效，无论(5)中方案处于何种状态，都可以立即停止使用(逻辑删除)。<br> 具体积分方案设置如下:</p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230505154020367.png" alt=""></p><h4 id="_2-2-1-全局积分限制" tabindex="-1">2.2.1 全局积分限制 <a class="header-anchor" href="#_2-2-1-全局积分限制" aria-label="Permalink to &quot;2.2.1 全局积分限制&quot;">​</a></h4><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/image-20230505153826542.png" alt=""></p><p>@sincev6.1 新增了全局积分限制，多个方案可以引用同一个全局积分限制。</p><h2 id="四、单次异步-累计积分注意事项" tabindex="-1">四、单次异步&amp;累计积分注意事项 <a class="header-anchor" href="#四、单次异步-累计积分注意事项" aria-label="Permalink to &quot;四、单次异步&amp;累计积分注意事项&quot;">​</a></h2><p>注意事项：<strong>积分指标里面就需要用到异步运算方法（实际是自定义数据库的数据库函数），将数据汇聚到一张中间表里面，这里以每日拜访次数为例，中间表有一些固定的字段，下面说明</strong></p><p>单次异步和累计积分相似，以累计积分演示</p><h3 id="_4-1-累计积分扩展演示" tabindex="-1">4.1 累计积分扩展演示 <a class="header-anchor" href="#_4-1-累计积分扩展演示" aria-label="Permalink to &quot;4.1 累计积分扩展演示&quot;">​</a></h3><p>累计积分以每日拜访次数为案例,需求:每日拜访10-15次，获得5分；拜访大于15次，每多拜访1家得0.5分；每天最高10分.</p><p>(1) 定义积分实体表 kx_visit_workrecord_exec<br> 主要字段解析：</p><table><thead><tr><th>字段名称</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td>拜访日期</td><td>是</td><td>按照日统计积分</td></tr><tr><td>成员id</td><td>是</td><td>赋值对象是谁</td></tr><tr><td>适用组织</td><td>是</td><td>标志该积分规则的一个适用范围</td></tr><tr><td>拜访内容</td><td>是</td><td>从实际拜访表汇聚过来</td></tr><tr><td>创建人(createop)</td><td>是</td><td>和成员id一样.单选</td></tr><tr><td>创建时间(createtime)</td><td>是</td><td></td></tr><tr><td>修改人(updateop)</td><td>是</td><td>修改人</td></tr><tr><td>修改时间(updatetime)</td><td>是</td><td>修改时间</td></tr><tr><td>每天次数上限</td><td>是</td><td>可限制每天触发获取积分的次数上限，单次积分/单次异步适用，累计积分没有该属性</td></tr><tr><td>处理状态(handledstatus)</td><td>是</td><td>0：为计算积分 1：已经计算积分</td></tr><tr><td>积分处理失败信息(integralremark)</td><td>是</td><td>处理情况，发生异常，会有log记录</td></tr><tr><td>营销组织(orgstructid)</td><td>是</td><td>成员所在营销组织</td></tr><tr><td>职位(positionid)</td><td>是</td><td>成员的职位</td></tr><tr><td>日期(datetime)</td><td>是</td><td>积分计算的日期，通常是di 调度的前一天.eg：该记录为 2022-06-08 di调度计算，该值为 2022-06-07</td></tr></tbody></table><p>具体信息如下：<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E6%8B%9C%E8%AE%BF%E8%AE%B0%E5%BD%95%E8%A1%A8.png" alt="&#39;拜访记录表&#39;"></p><p><strong><code>&lt;code&gt; 特别注意: &lt;/code&gt;</code></strong><br><strong><code>&lt;code&gt;以上红色框字段，必须添加在中间表中并按照以上格式填写。&lt;/code&gt;</code></strong></p><p>(3) 积分指标配置（类似于单次积分的指标）<br> 这部分需要注意，累计/异步积分需要填写异步运算方法，该function 需要自主开发，用于把拜访事实表汇聚数据到拜访积分实体表(kx_visit_workrecord_exec)中。<br> 如下以积分指标配置和异步函数f_integral_visit_count_finish(\\&#39;\\&#39;)详情:<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E7%B4%AF%E8%AE%A1-%E7%A7%AF%E5%88%86%E6%8C%87%E6%A0%87.png" alt="&#39;累计-积分指标&#39;"></p><p><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E7%B4%AF%E8%AE%A1-%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0.png" alt="&#39;累计-异步函数&#39;"></p><p>(4) 积分规则配置<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E7%B4%AF%E8%AE%A1-%E7%A7%AF%E5%88%86%E8%A7%84%E5%88%99.png" alt="&#39;累计-积分规则&#39;"></p><p>(5) 积分方案配置<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E7%B4%AF%E8%AE%A1-%E7%A7%AF%E5%88%86%E6%96%B9%E6%A1%88.png" alt="&#39;累计-积分方案&#39;"></p><p>(6) 积分计算<br> 累计/异步有2个di 调度服务。一个任务为:调用累计/单次异步的异步计算方法，即:function 汇总数据。另外一个任务:计算积分。<br> 积分di调度服务在di 平台上可以查询，运行.以下是演示环境的2个任务，也可以查看1000060 等租户的任务。<br><img src="http://apaas.wxchina.com:8881/wp-content/uploads/%E7%B4%AF%E8%AE%A1-di%E8%B0%83%E5%BA%A6.png" alt="&#39;累计-di调度&#39;"></p><p>综上: 累计/单次异步积分由di 调度服务处理，不需要开发人员手动调用。而单次积分则需要手动调用SPU 智慧插件触发</p><h2 id="五、积分spu智慧插件使用" tabindex="-1">五、积分SPU智慧插件使用 <a class="header-anchor" href="#五、积分spu智慧插件使用" aria-label="Permalink to &quot;五、积分SPU智慧插件使用&quot;">​</a></h2><p>apaas平台 ide 已经集成aPaaS SPU 插件。SPU 积分插件已经集成。<br> 5.1 api文档：<br> 入参：</p><table><thead><tr><th>字段</th><th>名称</th><th>类型</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td>object_name</td><td>积分指标名称</td><td>string</td><td>是</td><td>在配置中心-积分指标模板配置积分指标</td></tr><tr><td>object_id</td><td>积分实体对象id值</td><td>string</td><td>是</td><td>在id 数据插入所在事务提交之后调用插件，保证积分正常计算</td></tr><tr><td>column_name</td><td>业务表中主键对应的列名</td><td>string</td><td>否</td><td>不填则默认业务表的主键列名为id</td></tr></tbody></table><p>出参：</p><table><thead><tr><th>字段</th><th>名称</th><th>类型</th><th>是否必填</th><th>描述</th></tr></thead><tbody><tr><td>Response</td><td>响应结果</td><td>LIST</td><td>否</td><td>正常返回Response对象，说明调用成功。如果服务异常，会抛出error</td></tr></tbody></table><p>5.2 IDE 中调用</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">callIntegralSpu</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">execId</span><span style="color:#E1E4E8;">){ </span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> integralParam </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                      integral_params: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                          object_name: kx_dis_collect_isperfect, </span><span style="color:#6A737D;">// 积分指标名称</span></span>
<span class="line"><span style="color:#E1E4E8;">                          object_id: execId </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#6A737D;">// 这里execId为业务数据主键对应的值，这里是铺货表数据铺货数据表</span></span>
<span class="line"><span style="color:#E1E4E8;">                      }</span></span>
<span class="line"><span style="color:#E1E4E8;">                  }</span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#79B8FF;">FLY</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;memberIntegral.integral_single_execute&#39;</span><span style="color:#E1E4E8;">, integralParam);</span></span>
<span class="line"><span style="color:#E1E4E8;">              }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#6A737D;">// memberIntegral.integral_single_execute 细节.</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">          * 智慧100 v6.0 单次积分业务提交,积分计算</span></span>
<span class="line"><span style="color:#6A737D;">          * memberIntegral.integral_single_execute</span></span>
<span class="line"><span style="color:#6A737D;">         */</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(String.</span><span style="color:#B392F0;">isBlank</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.integral_params.object_name)</span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;">String.</span><span style="color:#B392F0;">isBlank</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.integral_params.object_id)){</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ERROR</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;【积分指标名称】【积分对象id值】必须填写!&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> SFA_Service </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PLUGIN</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">load</span><span style="color:#E1E4E8;">(SFA_Service);</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SERVER_1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> SFA_Service.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(integralPlugin);</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> HashMap </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> java.util.HashMap;</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> map </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HashMap</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">             map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(objectName, </span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.integral_params.object_name</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">             map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(objectId, </span><span style="color:#79B8FF;">IN</span><span style="color:#E1E4E8;">.integral_params.object_id</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// objectId 为kx_cost_display_exec表的id 值 </span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SERVER_1</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">singleIntegralCalculate</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, map);</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">FLY</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;res-&gt;&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> res);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(e){</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">FLY</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;积分计算失败,原因是:&#39;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">e);</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ERROR</span><span style="color:#E1E4E8;">(e);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">callIntegralSpu</span><span style="color:#24292E;">(</span><span style="color:#E36209;">execId</span><span style="color:#24292E;">){ </span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> integralParam </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                      integral_params: {</span></span>
<span class="line"><span style="color:#24292E;">                          object_name: kx_dis_collect_isperfect, </span><span style="color:#6A737D;">// 积分指标名称</span></span>
<span class="line"><span style="color:#24292E;">                          object_id: execId </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#6A737D;">// 这里execId为业务数据主键对应的值，这里是铺货表数据铺货数据表</span></span>
<span class="line"><span style="color:#24292E;">                      }</span></span>
<span class="line"><span style="color:#24292E;">                  }</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#005CC5;">FLY</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;memberIntegral.integral_single_execute&#39;</span><span style="color:#24292E;">, integralParam);</span></span>
<span class="line"><span style="color:#24292E;">              }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6A737D;">// memberIntegral.integral_single_execute 细节.</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">          * 智慧100 v6.0 单次积分业务提交,积分计算</span></span>
<span class="line"><span style="color:#6A737D;">          * memberIntegral.integral_single_execute</span></span>
<span class="line"><span style="color:#6A737D;">         */</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(String.</span><span style="color:#6F42C1;">isBlank</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.integral_params.object_name)</span><span style="color:#D73A49;">||</span><span style="color:#24292E;">String.</span><span style="color:#6F42C1;">isBlank</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.integral_params.object_id)){</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERROR</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;【积分指标名称】【积分对象id值】必须填写!&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">try</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> SFA_Service </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PLUGIN</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">load</span><span style="color:#24292E;">(SFA_Service);</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SERVER_1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> SFA_Service.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(integralPlugin);</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> HashMap </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> java.util.HashMap;</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HashMap</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">             map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(objectName, </span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.integral_params.object_name</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">             map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(objectId, </span><span style="color:#005CC5;">IN</span><span style="color:#24292E;">.integral_params.object_id</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// objectId 为kx_cost_display_exec表的id 值 </span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SERVER_1</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">singleIntegralCalculate</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, map);</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#005CC5;">FLY</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;res-&gt;&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> res);</span></span>
<span class="line"><span style="color:#24292E;">         }</span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(e){</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#005CC5;">FLY</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;积分计算失败,原因是:&#39;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">e);</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ERROR</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>`,82),e=[o];function t(r,c,E,y,i,d){return a(),n("div",null,e)}const m=s(l,[["render",t]]);export{b as __pageData,m as default};
